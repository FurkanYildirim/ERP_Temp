/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["sap/fe/core/CommonUtils", "sap/fe/core/controllerextensions/collaboration/ActivitySync", "sap/fe/core/controllerextensions/collaboration/CollaborationCommon"], function (CommonUtils, CollaborationActivitySync, CollaborationCommon) {
  "use strict";

  var Activity = CollaborationCommon.Activity;
  function getRelatedFieldFromValueHelp(oValueHelp) {
    const oView = CommonUtils.getTargetView(oValueHelp);
    return oView.findElements(true, function (oElem) {
      return !!(oElem.getFieldHelp && oElem.getDomRef() && oElem.getFieldHelp() === oValueHelp.getId());
    })[0];
  }
  function onValueHelpOpenDialog(oEvent) {
    const oValueHelp = oEvent.getSource();
    const oField = collaborationHelper.getRelatedFieldFromValueHelp(oValueHelp);
    const bCollaborationEnabled = CollaborationActivitySync.isConnected(oField);
    if (bCollaborationEnabled && oField.getBinding("value")) {
      var _oField$getBinding, _oField$getBindingCon, _oField$getBinding2, _oField$getBindingCon2, _oField$getBinding3;
      const sFullPath = (_oField$getBinding = oField.getBinding("value")) !== null && _oField$getBinding !== void 0 && _oField$getBinding.isA("sap.ui.model.CompositeBinding") ?
      // for the compositeBinding, we just send a message containing the path of the first element
      // it is enough to lock the entire field
      `${(_oField$getBindingCon = oField.getBindingContext()) === null || _oField$getBindingCon === void 0 ? void 0 : _oField$getBindingCon.getPath()}/${(_oField$getBinding2 = oField.getBinding("value")) === null || _oField$getBinding2 === void 0 ? void 0 : _oField$getBinding2.getBindings()[0].getPath()}` : `${(_oField$getBindingCon2 = oField.getBindingContext()) === null || _oField$getBindingCon2 === void 0 ? void 0 : _oField$getBindingCon2.getPath()}/${(_oField$getBinding3 = oField.getBinding("value")) === null || _oField$getBinding3 === void 0 ? void 0 : _oField$getBinding3.getPath()}`;
      CollaborationActivitySync.send(oField, Activity.LiveChange, sFullPath);
    }
  }
  function onValueHelpCloseDialog(oEvent) {
    var _oField$getBinding4;
    const oValueHelp = oEvent.getSource();
    const oField = collaborationHelper.getRelatedFieldFromValueHelp(oValueHelp);
    const bCollaborationEnabled = CollaborationActivitySync.isConnected(oField);
    const isCompositeBinding = (_oField$getBinding4 = oField.getBinding("value")) === null || _oField$getBinding4 === void 0 ? void 0 : _oField$getBinding4.isA("sap.ui.model.CompositeBinding");
    const oValueBeforeUpdate = isCompositeBinding ? oField.getValue()[1] : oField.getValue();
    return new Promise(resolve => {
      setTimeout(function () {
        var _oField$getBinding5;
        const value = isCompositeBinding ? oValueHelp.getConditions()[0].values[0] : (_oField$getBinding5 = oField.getBinding("value")) === null || _oField$getBinding5 === void 0 ? void 0 : _oField$getBinding5.getValue();
        if (bCollaborationEnabled && oValueBeforeUpdate === value) {
          var _oField$getBindingCon3, _oField$getBindingCon4, _oField$getBinding6;
          const sFullPath = isCompositeBinding ? `${(_oField$getBindingCon3 = oField.getBindingContext()) === null || _oField$getBindingCon3 === void 0 ? void 0 : _oField$getBindingCon3.getPath()}/${oField.getBinding("value").getBindings()[0].getPath()}` : `${(_oField$getBindingCon4 = oField.getBindingContext()) === null || _oField$getBindingCon4 === void 0 ? void 0 : _oField$getBindingCon4.getPath()}/${(_oField$getBinding6 = oField.getBinding("value")) === null || _oField$getBinding6 === void 0 ? void 0 : _oField$getBinding6.getPath()}`;
          CollaborationActivitySync.send(oField, Activity.Undo, sFullPath);
        }
        resolve();
      }, 0);
    });
  }
  const collaborationHelper = {
    getRelatedFieldFromValueHelp,
    onValueHelpOpenDialog,
    onValueHelpCloseDialog
  };
  return collaborationHelper;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRSZWxhdGVkRmllbGRGcm9tVmFsdWVIZWxwIiwib1ZhbHVlSGVscCIsIm9WaWV3IiwiQ29tbW9uVXRpbHMiLCJnZXRUYXJnZXRWaWV3IiwiZmluZEVsZW1lbnRzIiwib0VsZW0iLCJnZXRGaWVsZEhlbHAiLCJnZXREb21SZWYiLCJnZXRJZCIsIm9uVmFsdWVIZWxwT3BlbkRpYWxvZyIsIm9FdmVudCIsImdldFNvdXJjZSIsIm9GaWVsZCIsImNvbGxhYm9yYXRpb25IZWxwZXIiLCJiQ29sbGFib3JhdGlvbkVuYWJsZWQiLCJDb2xsYWJvcmF0aW9uQWN0aXZpdHlTeW5jIiwiaXNDb25uZWN0ZWQiLCJnZXRCaW5kaW5nIiwic0Z1bGxQYXRoIiwiaXNBIiwiZ2V0QmluZGluZ0NvbnRleHQiLCJnZXRQYXRoIiwiZ2V0QmluZGluZ3MiLCJzZW5kIiwiQWN0aXZpdHkiLCJMaXZlQ2hhbmdlIiwib25WYWx1ZUhlbHBDbG9zZURpYWxvZyIsImlzQ29tcG9zaXRlQmluZGluZyIsIm9WYWx1ZUJlZm9yZVVwZGF0ZSIsImdldFZhbHVlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0IiwidmFsdWUiLCJnZXRDb25kaXRpb25zIiwidmFsdWVzIiwiVW5kbyJdLCJzb3VyY2VSb290IjoiLiIsInNvdXJjZXMiOlsiY29sbGFib3JhdGlvbkhlbHBlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29tbW9uVXRpbHMgZnJvbSBcInNhcC9mZS9jb3JlL0NvbW1vblV0aWxzXCI7XG5pbXBvcnQgQ29sbGFib3JhdGlvbkFjdGl2aXR5U3luYyBmcm9tIFwic2FwL2ZlL2NvcmUvY29udHJvbGxlcmV4dGVuc2lvbnMvY29sbGFib3JhdGlvbi9BY3Rpdml0eVN5bmNcIjtcbmltcG9ydCB7IEFjdGl2aXR5IH0gZnJvbSBcInNhcC9mZS9jb3JlL2NvbnRyb2xsZXJleHRlbnNpb25zL2NvbGxhYm9yYXRpb24vQ29sbGFib3JhdGlvbkNvbW1vblwiO1xuaW1wb3J0IEV2ZW50IGZyb20gXCJzYXAvdWkvYmFzZS9FdmVudFwiO1xuaW1wb3J0IENvbnRyb2wgZnJvbSBcInNhcC91aS9jb3JlL0NvbnRyb2xcIjtcbmltcG9ydCBGaWVsZCBmcm9tIFwic2FwL3VpL21kYy9GaWVsZFwiO1xuaW1wb3J0IFZhbHVlSGVscCBmcm9tIFwic2FwL3VpL21kYy9WYWx1ZUhlbHBcIjtcblxuZnVuY3Rpb24gZ2V0UmVsYXRlZEZpZWxkRnJvbVZhbHVlSGVscChvVmFsdWVIZWxwOiBhbnkpOiBGaWVsZCB7XG5cdGNvbnN0IG9WaWV3ID0gQ29tbW9uVXRpbHMuZ2V0VGFyZ2V0VmlldyhvVmFsdWVIZWxwKTtcblx0cmV0dXJuIG9WaWV3LmZpbmRFbGVtZW50cyh0cnVlLCBmdW5jdGlvbiAob0VsZW06IENvbnRyb2wpIHtcblx0XHRyZXR1cm4gISEoKG9FbGVtIGFzIEZpZWxkKS5nZXRGaWVsZEhlbHAgJiYgb0VsZW0uZ2V0RG9tUmVmKCkgJiYgKG9FbGVtIGFzIEZpZWxkKS5nZXRGaWVsZEhlbHAoKSA9PT0gb1ZhbHVlSGVscC5nZXRJZCgpKTtcblx0fSlbMF0gYXMgRmllbGQ7XG59XG5cbmZ1bmN0aW9uIG9uVmFsdWVIZWxwT3BlbkRpYWxvZyhvRXZlbnQ6IGFueSkge1xuXHRjb25zdCBvVmFsdWVIZWxwID0gb0V2ZW50LmdldFNvdXJjZSgpO1xuXHRjb25zdCBvRmllbGQgPSBjb2xsYWJvcmF0aW9uSGVscGVyLmdldFJlbGF0ZWRGaWVsZEZyb21WYWx1ZUhlbHAob1ZhbHVlSGVscCk7XG5cdGNvbnN0IGJDb2xsYWJvcmF0aW9uRW5hYmxlZCA9IENvbGxhYm9yYXRpb25BY3Rpdml0eVN5bmMuaXNDb25uZWN0ZWQob0ZpZWxkKTtcblx0aWYgKGJDb2xsYWJvcmF0aW9uRW5hYmxlZCAmJiBvRmllbGQuZ2V0QmluZGluZyhcInZhbHVlXCIpKSB7XG5cdFx0Y29uc3Qgc0Z1bGxQYXRoID0gb0ZpZWxkLmdldEJpbmRpbmcoXCJ2YWx1ZVwiKT8uaXNBKFwic2FwLnVpLm1vZGVsLkNvbXBvc2l0ZUJpbmRpbmdcIilcblx0XHRcdD8gLy8gZm9yIHRoZSBjb21wb3NpdGVCaW5kaW5nLCB3ZSBqdXN0IHNlbmQgYSBtZXNzYWdlIGNvbnRhaW5pbmcgdGhlIHBhdGggb2YgdGhlIGZpcnN0IGVsZW1lbnRcblx0XHRcdCAgLy8gaXQgaXMgZW5vdWdoIHRvIGxvY2sgdGhlIGVudGlyZSBmaWVsZFxuXHRcdFx0ICBgJHtvRmllbGQuZ2V0QmluZGluZ0NvbnRleHQoKT8uZ2V0UGF0aCgpfS8keyhvRmllbGQuZ2V0QmluZGluZyhcInZhbHVlXCIpIGFzIGFueSk/LmdldEJpbmRpbmdzKClbMF0uZ2V0UGF0aCgpfWBcblx0XHRcdDogYCR7b0ZpZWxkLmdldEJpbmRpbmdDb250ZXh0KCk/LmdldFBhdGgoKX0vJHtvRmllbGQuZ2V0QmluZGluZyhcInZhbHVlXCIpPy5nZXRQYXRoKCl9YDtcblx0XHRDb2xsYWJvcmF0aW9uQWN0aXZpdHlTeW5jLnNlbmQob0ZpZWxkLCBBY3Rpdml0eS5MaXZlQ2hhbmdlLCBzRnVsbFBhdGgpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIG9uVmFsdWVIZWxwQ2xvc2VEaWFsb2cob0V2ZW50OiBFdmVudCk6IFByb21pc2U8dm9pZD4ge1xuXHRjb25zdCBvVmFsdWVIZWxwID0gb0V2ZW50LmdldFNvdXJjZSgpIGFzIFZhbHVlSGVscDtcblx0Y29uc3Qgb0ZpZWxkID0gY29sbGFib3JhdGlvbkhlbHBlci5nZXRSZWxhdGVkRmllbGRGcm9tVmFsdWVIZWxwKG9WYWx1ZUhlbHApO1xuXHRjb25zdCBiQ29sbGFib3JhdGlvbkVuYWJsZWQgPSBDb2xsYWJvcmF0aW9uQWN0aXZpdHlTeW5jLmlzQ29ubmVjdGVkKG9GaWVsZCk7XG5cdGNvbnN0IGlzQ29tcG9zaXRlQmluZGluZyA9IG9GaWVsZC5nZXRCaW5kaW5nKFwidmFsdWVcIik/LmlzQShcInNhcC51aS5tb2RlbC5Db21wb3NpdGVCaW5kaW5nXCIpO1xuXHRjb25zdCBvVmFsdWVCZWZvcmVVcGRhdGUgPSBpc0NvbXBvc2l0ZUJpbmRpbmcgPyBvRmllbGQuZ2V0VmFsdWUoKVsxXSA6IG9GaWVsZC5nZXRWYWx1ZSgpO1xuXG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuXHRcdHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuXHRcdFx0Y29uc3QgdmFsdWUgPSBpc0NvbXBvc2l0ZUJpbmRpbmdcblx0XHRcdFx0PyAob1ZhbHVlSGVscC5nZXRDb25kaXRpb25zKClbMF0gYXMgYW55KS52YWx1ZXNbMF1cblx0XHRcdFx0OiAob0ZpZWxkLmdldEJpbmRpbmcoXCJ2YWx1ZVwiKSBhcyBhbnkpPy5nZXRWYWx1ZSgpO1xuXHRcdFx0aWYgKGJDb2xsYWJvcmF0aW9uRW5hYmxlZCAmJiBvVmFsdWVCZWZvcmVVcGRhdGUgPT09IHZhbHVlKSB7XG5cdFx0XHRcdGNvbnN0IHNGdWxsUGF0aCA9IGlzQ29tcG9zaXRlQmluZGluZ1xuXHRcdFx0XHRcdD8gYCR7b0ZpZWxkLmdldEJpbmRpbmdDb250ZXh0KCk/LmdldFBhdGgoKX0vJHsob0ZpZWxkLmdldEJpbmRpbmcoXCJ2YWx1ZVwiKSBhcyBhbnkpLmdldEJpbmRpbmdzKClbMF0uZ2V0UGF0aCgpfWBcblx0XHRcdFx0XHQ6IGAke29GaWVsZC5nZXRCaW5kaW5nQ29udGV4dCgpPy5nZXRQYXRoKCl9LyR7b0ZpZWxkLmdldEJpbmRpbmcoXCJ2YWx1ZVwiKT8uZ2V0UGF0aCgpfWA7XG5cblx0XHRcdFx0Q29sbGFib3JhdGlvbkFjdGl2aXR5U3luYy5zZW5kKG9GaWVsZCwgQWN0aXZpdHkuVW5kbywgc0Z1bGxQYXRoKTtcblx0XHRcdH1cblx0XHRcdHJlc29sdmUoKTtcblx0XHR9LCAwKTtcblx0fSk7XG59XG5cbmNvbnN0IGNvbGxhYm9yYXRpb25IZWxwZXIgPSB7XG5cdGdldFJlbGF0ZWRGaWVsZEZyb21WYWx1ZUhlbHAsXG5cdG9uVmFsdWVIZWxwT3BlbkRpYWxvZyxcblx0b25WYWx1ZUhlbHBDbG9zZURpYWxvZ1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29sbGFib3JhdGlvbkhlbHBlcjtcbiJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQUE7QUFBQTs7Ozs7RUFRQSxTQUFTQSw0QkFBNEIsQ0FBQ0MsVUFBZSxFQUFTO0lBQzdELE1BQU1DLEtBQUssR0FBR0MsV0FBVyxDQUFDQyxhQUFhLENBQUNILFVBQVUsQ0FBQztJQUNuRCxPQUFPQyxLQUFLLENBQUNHLFlBQVksQ0FBQyxJQUFJLEVBQUUsVUFBVUMsS0FBYyxFQUFFO01BQ3pELE9BQU8sQ0FBQyxFQUFHQSxLQUFLLENBQVdDLFlBQVksSUFBSUQsS0FBSyxDQUFDRSxTQUFTLEVBQUUsSUFBS0YsS0FBSyxDQUFXQyxZQUFZLEVBQUUsS0FBS04sVUFBVSxDQUFDUSxLQUFLLEVBQUUsQ0FBQztJQUN4SCxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7RUFDTjtFQUVBLFNBQVNDLHFCQUFxQixDQUFDQyxNQUFXLEVBQUU7SUFDM0MsTUFBTVYsVUFBVSxHQUFHVSxNQUFNLENBQUNDLFNBQVMsRUFBRTtJQUNyQyxNQUFNQyxNQUFNLEdBQUdDLG1CQUFtQixDQUFDZCw0QkFBNEIsQ0FBQ0MsVUFBVSxDQUFDO0lBQzNFLE1BQU1jLHFCQUFxQixHQUFHQyx5QkFBeUIsQ0FBQ0MsV0FBVyxDQUFDSixNQUFNLENBQUM7SUFDM0UsSUFBSUUscUJBQXFCLElBQUlGLE1BQU0sQ0FBQ0ssVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFO01BQUE7TUFDeEQsTUFBTUMsU0FBUyxHQUFHLHNCQUFBTixNQUFNLENBQUNLLFVBQVUsQ0FBQyxPQUFPLENBQUMsK0NBQTFCLG1CQUE0QkUsR0FBRyxDQUFDLCtCQUErQixDQUFDO01BQy9FO01BQ0E7TUFDQyw0QkFBRVAsTUFBTSxDQUFDUSxpQkFBaUIsRUFBRSwwREFBMUIsc0JBQTRCQyxPQUFPLEVBQUcsSUFBQyx1QkFBR1QsTUFBTSxDQUFDSyxVQUFVLENBQUMsT0FBTyxDQUFDLHdEQUEzQixvQkFBcUNLLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDRCxPQUFPLEVBQUcsRUFBQyxHQUM1Ryw2QkFBRVQsTUFBTSxDQUFDUSxpQkFBaUIsRUFBRSwyREFBMUIsdUJBQTRCQyxPQUFPLEVBQUcsSUFBQyx1QkFBRVQsTUFBTSxDQUFDSyxVQUFVLENBQUMsT0FBTyxDQUFDLHdEQUExQixvQkFBNEJJLE9BQU8sRUFBRyxFQUFDO01BQ3RGTix5QkFBeUIsQ0FBQ1EsSUFBSSxDQUFDWCxNQUFNLEVBQUVZLFFBQVEsQ0FBQ0MsVUFBVSxFQUFFUCxTQUFTLENBQUM7SUFDdkU7RUFDRDtFQUVBLFNBQVNRLHNCQUFzQixDQUFDaEIsTUFBYSxFQUFpQjtJQUFBO0lBQzdELE1BQU1WLFVBQVUsR0FBR1UsTUFBTSxDQUFDQyxTQUFTLEVBQWU7SUFDbEQsTUFBTUMsTUFBTSxHQUFHQyxtQkFBbUIsQ0FBQ2QsNEJBQTRCLENBQUNDLFVBQVUsQ0FBQztJQUMzRSxNQUFNYyxxQkFBcUIsR0FBR0MseUJBQXlCLENBQUNDLFdBQVcsQ0FBQ0osTUFBTSxDQUFDO0lBQzNFLE1BQU1lLGtCQUFrQiwwQkFBR2YsTUFBTSxDQUFDSyxVQUFVLENBQUMsT0FBTyxDQUFDLHdEQUExQixvQkFBNEJFLEdBQUcsQ0FBQywrQkFBK0IsQ0FBQztJQUMzRixNQUFNUyxrQkFBa0IsR0FBR0Qsa0JBQWtCLEdBQUdmLE1BQU0sQ0FBQ2lCLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHakIsTUFBTSxDQUFDaUIsUUFBUSxFQUFFO0lBRXhGLE9BQU8sSUFBSUMsT0FBTyxDQUFFQyxPQUFPLElBQUs7TUFDL0JDLFVBQVUsQ0FBQyxZQUFZO1FBQUE7UUFDdEIsTUFBTUMsS0FBSyxHQUFHTixrQkFBa0IsR0FDNUIzQixVQUFVLENBQUNrQyxhQUFhLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBU0MsTUFBTSxDQUFDLENBQUMsQ0FBQywwQkFDL0N2QixNQUFNLENBQUNLLFVBQVUsQ0FBQyxPQUFPLENBQUMsd0RBQTNCLG9CQUFxQ1ksUUFBUSxFQUFFO1FBQ2xELElBQUlmLHFCQUFxQixJQUFJYyxrQkFBa0IsS0FBS0ssS0FBSyxFQUFFO1VBQUE7VUFDMUQsTUFBTWYsU0FBUyxHQUFHUyxrQkFBa0IsR0FDaEMsNkJBQUVmLE1BQU0sQ0FBQ1EsaUJBQWlCLEVBQUUsMkRBQTFCLHVCQUE0QkMsT0FBTyxFQUFHLElBQUlULE1BQU0sQ0FBQ0ssVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFTSyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQ0QsT0FBTyxFQUFHLEVBQUMsR0FDM0csNkJBQUVULE1BQU0sQ0FBQ1EsaUJBQWlCLEVBQUUsMkRBQTFCLHVCQUE0QkMsT0FBTyxFQUFHLElBQUMsdUJBQUVULE1BQU0sQ0FBQ0ssVUFBVSxDQUFDLE9BQU8sQ0FBQyx3REFBMUIsb0JBQTRCSSxPQUFPLEVBQUcsRUFBQztVQUV0Rk4seUJBQXlCLENBQUNRLElBQUksQ0FBQ1gsTUFBTSxFQUFFWSxRQUFRLENBQUNZLElBQUksRUFBRWxCLFNBQVMsQ0FBQztRQUNqRTtRQUNBYSxPQUFPLEVBQUU7TUFDVixDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0VBQ0g7RUFFQSxNQUFNbEIsbUJBQW1CLEdBQUc7SUFDM0JkLDRCQUE0QjtJQUM1QlUscUJBQXFCO0lBQ3JCaUI7RUFDRCxDQUFDO0VBQUMsT0FFYWIsbUJBQW1CO0FBQUEifQ==