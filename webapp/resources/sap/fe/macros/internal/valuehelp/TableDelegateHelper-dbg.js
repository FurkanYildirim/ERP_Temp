/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["sap/fe/core/helpers/TypeGuards"], function (TypeGuards) {
  "use strict";

  var _exports = {};
  var isProperty = TypeGuards.isProperty;
  /**
   * Identifies if the given property is filterable based on the sort restriction information.
   *
   * @param filterRestrictionsInfo The filter restriction information from the restriction annotation.
   * @param property The target property.
   * @returns `true` if the given property is filterable.
   * @private
   */
  function isFilterableProperty(filterRestrictionsInfo, property) {
    const propertyPath = getPath(property);
    return propertyPath && filterRestrictionsInfo !== null && filterRestrictionsInfo !== void 0 && filterRestrictionsInfo.propertyInfo.hasOwnProperty(propertyPath) ? filterRestrictionsInfo.propertyInfo[propertyPath].filterable : property.filterable ?? true;
  }

  /**
   * Identifies if the given property is sortable based on the sort restriction information.
   *
   * @param sortRestrictionsInfo The sort restriction information from the restriction annotation.
   * @param property The target property.
   * @returns `true` if the given property is sortable.
   * @private
   */
  _exports.isFilterableProperty = isFilterableProperty;
  function isSortableProperty(sortRestrictionsInfo, property) {
    const propertyPath = getPath(property);
    return propertyPath && sortRestrictionsInfo.propertyInfo[propertyPath] ? sortRestrictionsInfo.propertyInfo[propertyPath].sortable : property.sortable ?? true;
  }

  /**
   * Provides the property path of a given property or custom data from the ValueHelp.
   *
   * @param property The target property or custom data from the ValueHelp.
   * @returns The property path.
   */
  _exports.isSortableProperty = isSortableProperty;
  function getPath(property) {
    return isProperty(property) ? property.name : property.path;
  }
  _exports.getPath = getPath;
  return _exports;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpc0ZpbHRlcmFibGVQcm9wZXJ0eSIsImZpbHRlclJlc3RyaWN0aW9uc0luZm8iLCJwcm9wZXJ0eSIsInByb3BlcnR5UGF0aCIsImdldFBhdGgiLCJwcm9wZXJ0eUluZm8iLCJoYXNPd25Qcm9wZXJ0eSIsImZpbHRlcmFibGUiLCJpc1NvcnRhYmxlUHJvcGVydHkiLCJzb3J0UmVzdHJpY3Rpb25zSW5mbyIsInNvcnRhYmxlIiwiaXNQcm9wZXJ0eSIsIm5hbWUiLCJwYXRoIl0sInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyJUYWJsZURlbGVnYXRlSGVscGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogY29sbGVjdGlvbiBvZiBoZWxwZXIgZnVuY3Rpb25zIGZyb20gXCJzYXAvZmUvbWFjcm9zL2ludGVybmFsL3ZhbHVlaGVscC9UYWJsZURlbGVnYXRlXCJcbiAqIHNldCBpbnRvIGhlbHBlciBmaWxlIGZvciBlYXN5IHRlc3QgYWNjc2Vzc1xuICovXG5cbmltcG9ydCB7IFByb3BlcnR5IH0gZnJvbSBcIkBzYXAtdXgvdm9jYWJ1bGFyaWVzLXR5cGVzXCI7XG5pbXBvcnQgeyBGaWx0ZXJSZXN0cmljdGlvbnNJbmZvVHlwZSwgU29ydFJlc3RyaWN0aW9uc0luZm9UeXBlIH0gZnJvbSBcInNhcC9mZS9jb3JlL2hlbHBlcnMvTWV0YU1vZGVsRnVuY3Rpb25cIjtcbmltcG9ydCB7IGlzUHJvcGVydHkgfSBmcm9tIFwic2FwL2ZlL2NvcmUvaGVscGVycy9UeXBlR3VhcmRzXCI7XG5pbXBvcnQgdHlwZSB7IFZhbHVlSGVscFRhYmxlQ29sdW1uIH0gZnJvbSBcInNhcC9mZS9tYWNyb3MvaW50ZXJuYWwvdmFsdWVoZWxwL1RhYmxlRGVsZWdhdGVcIjtcblxuLyoqXG4gKiBJZGVudGlmaWVzIGlmIHRoZSBnaXZlbiBwcm9wZXJ0eSBpcyBmaWx0ZXJhYmxlIGJhc2VkIG9uIHRoZSBzb3J0IHJlc3RyaWN0aW9uIGluZm9ybWF0aW9uLlxuICpcbiAqIEBwYXJhbSBmaWx0ZXJSZXN0cmljdGlvbnNJbmZvIFRoZSBmaWx0ZXIgcmVzdHJpY3Rpb24gaW5mb3JtYXRpb24gZnJvbSB0aGUgcmVzdHJpY3Rpb24gYW5ub3RhdGlvbi5cbiAqIEBwYXJhbSBwcm9wZXJ0eSBUaGUgdGFyZ2V0IHByb3BlcnR5LlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBnaXZlbiBwcm9wZXJ0eSBpcyBmaWx0ZXJhYmxlLlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRmlsdGVyYWJsZVByb3BlcnR5KFxuXHRmaWx0ZXJSZXN0cmljdGlvbnNJbmZvOiBGaWx0ZXJSZXN0cmljdGlvbnNJbmZvVHlwZSxcblx0cHJvcGVydHk6IFZhbHVlSGVscFRhYmxlQ29sdW1uIHwgUHJvcGVydHlcbik6IGJvb2xlYW4gfCB1bmRlZmluZWQge1xuXHRjb25zdCBwcm9wZXJ0eVBhdGggPSBnZXRQYXRoKHByb3BlcnR5KTtcblx0cmV0dXJuIHByb3BlcnR5UGF0aCAmJiBmaWx0ZXJSZXN0cmljdGlvbnNJbmZvPy5wcm9wZXJ0eUluZm8uaGFzT3duUHJvcGVydHkocHJvcGVydHlQYXRoKVxuXHRcdD8gZmlsdGVyUmVzdHJpY3Rpb25zSW5mby5wcm9wZXJ0eUluZm9bcHJvcGVydHlQYXRoXS5maWx0ZXJhYmxlXG5cdFx0OiAocHJvcGVydHkgYXMgVmFsdWVIZWxwVGFibGVDb2x1bW4pLmZpbHRlcmFibGUgPz8gdHJ1ZTtcbn1cblxuLyoqXG4gKiBJZGVudGlmaWVzIGlmIHRoZSBnaXZlbiBwcm9wZXJ0eSBpcyBzb3J0YWJsZSBiYXNlZCBvbiB0aGUgc29ydCByZXN0cmljdGlvbiBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAcGFyYW0gc29ydFJlc3RyaWN0aW9uc0luZm8gVGhlIHNvcnQgcmVzdHJpY3Rpb24gaW5mb3JtYXRpb24gZnJvbSB0aGUgcmVzdHJpY3Rpb24gYW5ub3RhdGlvbi5cbiAqIEBwYXJhbSBwcm9wZXJ0eSBUaGUgdGFyZ2V0IHByb3BlcnR5LlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBnaXZlbiBwcm9wZXJ0eSBpcyBzb3J0YWJsZS5cbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1NvcnRhYmxlUHJvcGVydHkoXG5cdHNvcnRSZXN0cmljdGlvbnNJbmZvOiBTb3J0UmVzdHJpY3Rpb25zSW5mb1R5cGUsXG5cdHByb3BlcnR5OiBWYWx1ZUhlbHBUYWJsZUNvbHVtbiB8IFByb3BlcnR5XG4pOiBib29sZWFuIHwgdW5kZWZpbmVkIHtcblx0Y29uc3QgcHJvcGVydHlQYXRoID0gZ2V0UGF0aChwcm9wZXJ0eSk7XG5cdHJldHVybiBwcm9wZXJ0eVBhdGggJiYgc29ydFJlc3RyaWN0aW9uc0luZm8ucHJvcGVydHlJbmZvW3Byb3BlcnR5UGF0aF1cblx0XHQ/IHNvcnRSZXN0cmljdGlvbnNJbmZvLnByb3BlcnR5SW5mb1twcm9wZXJ0eVBhdGhdLnNvcnRhYmxlXG5cdFx0OiAocHJvcGVydHkgYXMgVmFsdWVIZWxwVGFibGVDb2x1bW4pLnNvcnRhYmxlID8/IHRydWU7XG59XG5cbi8qKlxuICogUHJvdmlkZXMgdGhlIHByb3BlcnR5IHBhdGggb2YgYSBnaXZlbiBwcm9wZXJ0eSBvciBjdXN0b20gZGF0YSBmcm9tIHRoZSBWYWx1ZUhlbHAuXG4gKlxuICogQHBhcmFtIHByb3BlcnR5IFRoZSB0YXJnZXQgcHJvcGVydHkgb3IgY3VzdG9tIGRhdGEgZnJvbSB0aGUgVmFsdWVIZWxwLlxuICogQHJldHVybnMgVGhlIHByb3BlcnR5IHBhdGguXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRQYXRoKHByb3BlcnR5OiBWYWx1ZUhlbHBUYWJsZUNvbHVtbiB8IFByb3BlcnR5KTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcblx0cmV0dXJuIGlzUHJvcGVydHkocHJvcGVydHkpID8gcHJvcGVydHkubmFtZSA6IHByb3BlcnR5LnBhdGg7XG59XG4iXSwibWFwcGluZ3MiOiI7QUFBQTtBQUFBO0FBQUE7Ozs7OztFQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDTyxTQUFTQSxvQkFBb0IsQ0FDbkNDLHNCQUFrRCxFQUNsREMsUUFBeUMsRUFDbkI7SUFDdEIsTUFBTUMsWUFBWSxHQUFHQyxPQUFPLENBQUNGLFFBQVEsQ0FBQztJQUN0QyxPQUFPQyxZQUFZLElBQUlGLHNCQUFzQixhQUF0QkEsc0JBQXNCLGVBQXRCQSxzQkFBc0IsQ0FBRUksWUFBWSxDQUFDQyxjQUFjLENBQUNILFlBQVksQ0FBQyxHQUNyRkYsc0JBQXNCLENBQUNJLFlBQVksQ0FBQ0YsWUFBWSxDQUFDLENBQUNJLFVBQVUsR0FDM0RMLFFBQVEsQ0FBMEJLLFVBQVUsSUFBSSxJQUFJO0VBQ3pEOztFQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFQQTtFQVFPLFNBQVNDLGtCQUFrQixDQUNqQ0Msb0JBQThDLEVBQzlDUCxRQUF5QyxFQUNuQjtJQUN0QixNQUFNQyxZQUFZLEdBQUdDLE9BQU8sQ0FBQ0YsUUFBUSxDQUFDO0lBQ3RDLE9BQU9DLFlBQVksSUFBSU0sb0JBQW9CLENBQUNKLFlBQVksQ0FBQ0YsWUFBWSxDQUFDLEdBQ25FTSxvQkFBb0IsQ0FBQ0osWUFBWSxDQUFDRixZQUFZLENBQUMsQ0FBQ08sUUFBUSxHQUN2RFIsUUFBUSxDQUEwQlEsUUFBUSxJQUFJLElBQUk7RUFDdkQ7O0VBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBTEE7RUFNTyxTQUFTTixPQUFPLENBQUNGLFFBQXlDLEVBQXNCO0lBQ3RGLE9BQU9TLFVBQVUsQ0FBQ1QsUUFBUSxDQUFDLEdBQUdBLFFBQVEsQ0FBQ1UsSUFBSSxHQUFHVixRQUFRLENBQUNXLElBQUk7RUFDNUQ7RUFBQztFQUFBO0FBQUEifQ==