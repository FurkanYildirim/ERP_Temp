/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/UIFormatters"], function (PropertyHelper, UIFormatters) {
  "use strict";

  var _exports = {};
  var getDisplayMode = UIFormatters.getDisplayMode;
  var hasValueHelp = PropertyHelper.hasValueHelp;
  const getDisplayProperty = function (propertyObjectPath, propertyConverted) {
    return hasValueHelp(propertyConverted) ? getDisplayMode(propertyObjectPath) : "Value";
  };
  _exports.getDisplayProperty = getDisplayProperty;
  const getFilterFieldDisplayFormat = async function (propertyObjectPath, propertyConverted, propertyInterface) {
    var _propertyConverted$an, _propertyConverted$an2;
    const oTextAnnotation = propertyConverted === null || propertyConverted === void 0 ? void 0 : (_propertyConverted$an = propertyConverted.annotations) === null || _propertyConverted$an === void 0 ? void 0 : (_propertyConverted$an2 = _propertyConverted$an.Common) === null || _propertyConverted$an2 === void 0 ? void 0 : _propertyConverted$an2.Text;
    if (oTextAnnotation) {
      // The text annotation should be on the property defined
      return getDisplayProperty(propertyObjectPath, propertyConverted);
    }
    const bHasValueHelp = hasValueHelp(propertyConverted);
    if (bHasValueHelp) {
      var _propertyObjectPath$t, _propertyObjectPath$t2, _propertyObjectPath$t3;
      // Exceptional case for missing text annotation on the property (retrieve text from value list)
      // Consider TextArrangement at EntityType otherwise set default display format 'DescriptionValue'
      const entityTextArrangement = propertyObjectPath === null || propertyObjectPath === void 0 ? void 0 : (_propertyObjectPath$t = propertyObjectPath.targetEntityType) === null || _propertyObjectPath$t === void 0 ? void 0 : (_propertyObjectPath$t2 = _propertyObjectPath$t.annotations) === null || _propertyObjectPath$t2 === void 0 ? void 0 : (_propertyObjectPath$t3 = _propertyObjectPath$t2.UI) === null || _propertyObjectPath$t3 === void 0 ? void 0 : _propertyObjectPath$t3.TextArrangement;
      return entityTextArrangement ? getDisplayMode(propertyObjectPath) : _getDisplayModeFromValueHelp(propertyInterface, propertyObjectPath);
    }
    return "Value";
  };

  /**
   * Method to determine the display mode from the value help.
   *
   * @param Interface The current templating context
   * @param propertyObjectPath The global path to reach the entitySet
   * @returns A promise with the string 'DescriptionValue' or 'Value', depending on whether a text annotation exists for the property in the value help
   * Hint: A text arrangement is consciously ignored. If the text is retrieved from the value help, the text arrangement of the value help property isnÂ´t considered. Instead, the default text arrangement #TextFirst
   * is used.
   */
  _exports.getFilterFieldDisplayFormat = getFilterFieldDisplayFormat;
  async function _getDisplayModeFromValueHelp(Interface, propertyObjectPath) {
    const context = Interface.context;
    const metaModel = Interface.context.getModel();
    return await metaModel.requestValueListInfo(context.getPath(), true, context).then(function (valueListInfo) {
      var _firstValueListInfo$P;
      const firstKey = Object.keys(valueListInfo)[0];
      const firstValueListInfo = valueListInfo[firstKey];
      const valueListParameter = (_firstValueListInfo$P = firstValueListInfo.Parameters) === null || _firstValueListInfo$P === void 0 ? void 0 : _firstValueListInfo$P.find(element => {
        var _element$LocalDataPro, _propertyObjectPath$t4;
        return ((_element$LocalDataPro = element.LocalDataProperty) === null || _element$LocalDataPro === void 0 ? void 0 : _element$LocalDataPro.$PropertyPath) === (propertyObjectPath === null || propertyObjectPath === void 0 ? void 0 : (_propertyObjectPath$t4 = propertyObjectPath.targetObject) === null || _propertyObjectPath$t4 === void 0 ? void 0 : _propertyObjectPath$t4.name);
      });
      const valueListProperty = valueListParameter === null || valueListParameter === void 0 ? void 0 : valueListParameter.ValueListProperty;
      const textAnnotation = metaModel.getObject("/" + firstValueListInfo.CollectionPath + "/" + valueListProperty + "@com.sap.vocabularies.Common.v1.Text");
      return textAnnotation ? "DescriptionValue" : "Value";
    });
  }
  _exports._getDisplayModeFromValueHelp = _getDisplayModeFromValueHelp;
  return _exports;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXREaXNwbGF5UHJvcGVydHkiLCJwcm9wZXJ0eU9iamVjdFBhdGgiLCJwcm9wZXJ0eUNvbnZlcnRlZCIsImhhc1ZhbHVlSGVscCIsImdldERpc3BsYXlNb2RlIiwiZ2V0RmlsdGVyRmllbGREaXNwbGF5Rm9ybWF0IiwicHJvcGVydHlJbnRlcmZhY2UiLCJvVGV4dEFubm90YXRpb24iLCJhbm5vdGF0aW9ucyIsIkNvbW1vbiIsIlRleHQiLCJiSGFzVmFsdWVIZWxwIiwiZW50aXR5VGV4dEFycmFuZ2VtZW50IiwidGFyZ2V0RW50aXR5VHlwZSIsIlVJIiwiVGV4dEFycmFuZ2VtZW50IiwiX2dldERpc3BsYXlNb2RlRnJvbVZhbHVlSGVscCIsIkludGVyZmFjZSIsImNvbnRleHQiLCJtZXRhTW9kZWwiLCJnZXRNb2RlbCIsInJlcXVlc3RWYWx1ZUxpc3RJbmZvIiwiZ2V0UGF0aCIsInRoZW4iLCJ2YWx1ZUxpc3RJbmZvIiwiZmlyc3RLZXkiLCJPYmplY3QiLCJrZXlzIiwiZmlyc3RWYWx1ZUxpc3RJbmZvIiwidmFsdWVMaXN0UGFyYW1ldGVyIiwiUGFyYW1ldGVycyIsImZpbmQiLCJlbGVtZW50IiwiTG9jYWxEYXRhUHJvcGVydHkiLCIkUHJvcGVydHlQYXRoIiwidGFyZ2V0T2JqZWN0IiwibmFtZSIsInZhbHVlTGlzdFByb3BlcnR5IiwiVmFsdWVMaXN0UHJvcGVydHkiLCJ0ZXh0QW5ub3RhdGlvbiIsImdldE9iamVjdCIsIkNvbGxlY3Rpb25QYXRoIl0sInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyJGaWx0ZXJGaWVsZFRlbXBsYXRpbmcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0YU1vZGVsT2JqZWN0UGF0aCB9IGZyb20gXCJzYXAvZmUvY29yZS90ZW1wbGF0aW5nL0RhdGFNb2RlbFBhdGhIZWxwZXJcIjtcbmltcG9ydCB7IGhhc1ZhbHVlSGVscCB9IGZyb20gXCJzYXAvZmUvY29yZS90ZW1wbGF0aW5nL1Byb3BlcnR5SGVscGVyXCI7XG5pbXBvcnQgeyBnZXREaXNwbGF5TW9kZSB9IGZyb20gXCJzYXAvZmUvY29yZS90ZW1wbGF0aW5nL1VJRm9ybWF0dGVyc1wiO1xuXG5pbXBvcnQgdHlwZSB7IFByb3BlcnR5IH0gZnJvbSBcIkBzYXAtdXgvdm9jYWJ1bGFyaWVzLXR5cGVzXCI7XG5pbXBvcnQgdHlwZSB7IENvbXB1dGVkQW5ub3RhdGlvbkludGVyZmFjZSB9IGZyb20gXCJzYXAvZmUvY29yZS90ZW1wbGF0aW5nL1VJRm9ybWF0dGVyc1wiO1xuaW1wb3J0IHR5cGUgQ29udGV4dCBmcm9tIFwic2FwL3VpL21vZGVsL29kYXRhL3Y0L0NvbnRleHRcIjtcbmltcG9ydCB0eXBlIE9EYXRhTWV0YU1vZGVsIGZyb20gXCJzYXAvdWkvbW9kZWwvb2RhdGEvdjQvT0RhdGFNZXRhTW9kZWxcIjtcblxuZXhwb3J0IGNvbnN0IGdldERpc3BsYXlQcm9wZXJ0eSA9IGZ1bmN0aW9uIChwcm9wZXJ0eU9iamVjdFBhdGg6IERhdGFNb2RlbE9iamVjdFBhdGgsIHByb3BlcnR5Q29udmVydGVkOiBQcm9wZXJ0eSk6IHN0cmluZyB7XG5cdHJldHVybiBoYXNWYWx1ZUhlbHAocHJvcGVydHlDb252ZXJ0ZWQpID8gZ2V0RGlzcGxheU1vZGUocHJvcGVydHlPYmplY3RQYXRoKSA6IFwiVmFsdWVcIjtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRGaWx0ZXJGaWVsZERpc3BsYXlGb3JtYXQgPSBhc3luYyBmdW5jdGlvbiAoXG5cdHByb3BlcnR5T2JqZWN0UGF0aDogRGF0YU1vZGVsT2JqZWN0UGF0aCxcblx0cHJvcGVydHlDb252ZXJ0ZWQ6IFByb3BlcnR5LFxuXHRwcm9wZXJ0eUludGVyZmFjZTogQ29tcHV0ZWRBbm5vdGF0aW9uSW50ZXJmYWNlXG4pOiBQcm9taXNlPHN0cmluZz4ge1xuXHRjb25zdCBvVGV4dEFubm90YXRpb24gPSBwcm9wZXJ0eUNvbnZlcnRlZD8uYW5ub3RhdGlvbnM/LkNvbW1vbj8uVGV4dDtcblx0aWYgKG9UZXh0QW5ub3RhdGlvbikge1xuXHRcdC8vIFRoZSB0ZXh0IGFubm90YXRpb24gc2hvdWxkIGJlIG9uIHRoZSBwcm9wZXJ0eSBkZWZpbmVkXG5cdFx0cmV0dXJuIGdldERpc3BsYXlQcm9wZXJ0eShwcm9wZXJ0eU9iamVjdFBhdGgsIHByb3BlcnR5Q29udmVydGVkKTtcblx0fVxuXHRjb25zdCBiSGFzVmFsdWVIZWxwID0gaGFzVmFsdWVIZWxwKHByb3BlcnR5Q29udmVydGVkKTtcblx0aWYgKGJIYXNWYWx1ZUhlbHApIHtcblx0XHQvLyBFeGNlcHRpb25hbCBjYXNlIGZvciBtaXNzaW5nIHRleHQgYW5ub3RhdGlvbiBvbiB0aGUgcHJvcGVydHkgKHJldHJpZXZlIHRleHQgZnJvbSB2YWx1ZSBsaXN0KVxuXHRcdC8vIENvbnNpZGVyIFRleHRBcnJhbmdlbWVudCBhdCBFbnRpdHlUeXBlIG90aGVyd2lzZSBzZXQgZGVmYXVsdCBkaXNwbGF5IGZvcm1hdCAnRGVzY3JpcHRpb25WYWx1ZSdcblx0XHRjb25zdCBlbnRpdHlUZXh0QXJyYW5nZW1lbnQgPSBwcm9wZXJ0eU9iamVjdFBhdGg/LnRhcmdldEVudGl0eVR5cGU/LmFubm90YXRpb25zPy5VST8uVGV4dEFycmFuZ2VtZW50O1xuXHRcdHJldHVybiBlbnRpdHlUZXh0QXJyYW5nZW1lbnRcblx0XHRcdD8gZ2V0RGlzcGxheU1vZGUocHJvcGVydHlPYmplY3RQYXRoKVxuXHRcdFx0OiBfZ2V0RGlzcGxheU1vZGVGcm9tVmFsdWVIZWxwKHByb3BlcnR5SW50ZXJmYWNlLCBwcm9wZXJ0eU9iamVjdFBhdGgpO1xuXHR9XG5cdHJldHVybiBcIlZhbHVlXCI7XG59O1xuXG4vKipcbiAqIE1ldGhvZCB0byBkZXRlcm1pbmUgdGhlIGRpc3BsYXkgbW9kZSBmcm9tIHRoZSB2YWx1ZSBoZWxwLlxuICpcbiAqIEBwYXJhbSBJbnRlcmZhY2UgVGhlIGN1cnJlbnQgdGVtcGxhdGluZyBjb250ZXh0XG4gKiBAcGFyYW0gcHJvcGVydHlPYmplY3RQYXRoIFRoZSBnbG9iYWwgcGF0aCB0byByZWFjaCB0aGUgZW50aXR5U2V0XG4gKiBAcmV0dXJucyBBIHByb21pc2Ugd2l0aCB0aGUgc3RyaW5nICdEZXNjcmlwdGlvblZhbHVlJyBvciAnVmFsdWUnLCBkZXBlbmRpbmcgb24gd2hldGhlciBhIHRleHQgYW5ub3RhdGlvbiBleGlzdHMgZm9yIHRoZSBwcm9wZXJ0eSBpbiB0aGUgdmFsdWUgaGVscFxuICogSGludDogQSB0ZXh0IGFycmFuZ2VtZW50IGlzIGNvbnNjaW91c2x5IGlnbm9yZWQuIElmIHRoZSB0ZXh0IGlzIHJldHJpZXZlZCBmcm9tIHRoZSB2YWx1ZSBoZWxwLCB0aGUgdGV4dCBhcnJhbmdlbWVudCBvZiB0aGUgdmFsdWUgaGVscCBwcm9wZXJ0eSBpc27CtHQgY29uc2lkZXJlZC4gSW5zdGVhZCwgdGhlIGRlZmF1bHQgdGV4dCBhcnJhbmdlbWVudCAjVGV4dEZpcnN0XG4gKiBpcyB1c2VkLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gX2dldERpc3BsYXlNb2RlRnJvbVZhbHVlSGVscChcblx0SW50ZXJmYWNlOiBDb21wdXRlZEFubm90YXRpb25JbnRlcmZhY2UsXG5cdHByb3BlcnR5T2JqZWN0UGF0aDogRGF0YU1vZGVsT2JqZWN0UGF0aFxuKTogUHJvbWlzZTxzdHJpbmc+IHtcblx0Y29uc3QgY29udGV4dCA9IEludGVyZmFjZS5jb250ZXh0IGFzIHVua25vd24gYXMgQ29udGV4dDtcblx0Y29uc3QgbWV0YU1vZGVsID0gSW50ZXJmYWNlLmNvbnRleHQuZ2V0TW9kZWwoKSBhcyB1bmtub3duIGFzIE9EYXRhTWV0YU1vZGVsO1xuXG5cdHJldHVybiBhd2FpdCBtZXRhTW9kZWwucmVxdWVzdFZhbHVlTGlzdEluZm8oY29udGV4dC5nZXRQYXRoKCksIHRydWUsIGNvbnRleHQpLnRoZW4oZnVuY3Rpb24gKHZhbHVlTGlzdEluZm86IGFueSkge1xuXHRcdGNvbnN0IGZpcnN0S2V5ID0gT2JqZWN0LmtleXModmFsdWVMaXN0SW5mbylbMF07XG5cdFx0Y29uc3QgZmlyc3RWYWx1ZUxpc3RJbmZvID0gdmFsdWVMaXN0SW5mb1tmaXJzdEtleV07XG5cdFx0Y29uc3QgdmFsdWVMaXN0UGFyYW1ldGVyID0gZmlyc3RWYWx1ZUxpc3RJbmZvLlBhcmFtZXRlcnM/LmZpbmQoKGVsZW1lbnQ6IGFueSkgPT4ge1xuXHRcdFx0cmV0dXJuIGVsZW1lbnQuTG9jYWxEYXRhUHJvcGVydHk/LiRQcm9wZXJ0eVBhdGggPT09IHByb3BlcnR5T2JqZWN0UGF0aD8udGFyZ2V0T2JqZWN0Py5uYW1lO1xuXHRcdH0pO1xuXHRcdGNvbnN0IHZhbHVlTGlzdFByb3BlcnR5ID0gdmFsdWVMaXN0UGFyYW1ldGVyPy5WYWx1ZUxpc3RQcm9wZXJ0eTtcblxuXHRcdGNvbnN0IHRleHRBbm5vdGF0aW9uID0gbWV0YU1vZGVsLmdldE9iamVjdChcblx0XHRcdFwiL1wiICsgZmlyc3RWYWx1ZUxpc3RJbmZvLkNvbGxlY3Rpb25QYXRoICsgXCIvXCIgKyB2YWx1ZUxpc3RQcm9wZXJ0eSArIFwiQGNvbS5zYXAudm9jYWJ1bGFyaWVzLkNvbW1vbi52MS5UZXh0XCJcblx0XHQpO1xuXHRcdHJldHVybiB0ZXh0QW5ub3RhdGlvbiA/IFwiRGVzY3JpcHRpb25WYWx1ZVwiIDogXCJWYWx1ZVwiO1xuXHR9KTtcbn1cbiJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQUE7QUFBQTs7Ozs7OztFQVNPLE1BQU1BLGtCQUFrQixHQUFHLFVBQVVDLGtCQUF1QyxFQUFFQyxpQkFBMkIsRUFBVTtJQUN6SCxPQUFPQyxZQUFZLENBQUNELGlCQUFpQixDQUFDLEdBQUdFLGNBQWMsQ0FBQ0gsa0JBQWtCLENBQUMsR0FBRyxPQUFPO0VBQ3RGLENBQUM7RUFBQztFQUVLLE1BQU1JLDJCQUEyQixHQUFHLGdCQUMxQ0osa0JBQXVDLEVBQ3ZDQyxpQkFBMkIsRUFDM0JJLGlCQUE4QyxFQUM1QjtJQUFBO0lBQ2xCLE1BQU1DLGVBQWUsR0FBR0wsaUJBQWlCLGFBQWpCQSxpQkFBaUIsZ0RBQWpCQSxpQkFBaUIsQ0FBRU0sV0FBVyxvRkFBOUIsc0JBQWdDQyxNQUFNLDJEQUF0Qyx1QkFBd0NDLElBQUk7SUFDcEUsSUFBSUgsZUFBZSxFQUFFO01BQ3BCO01BQ0EsT0FBT1Asa0JBQWtCLENBQUNDLGtCQUFrQixFQUFFQyxpQkFBaUIsQ0FBQztJQUNqRTtJQUNBLE1BQU1TLGFBQWEsR0FBR1IsWUFBWSxDQUFDRCxpQkFBaUIsQ0FBQztJQUNyRCxJQUFJUyxhQUFhLEVBQUU7TUFBQTtNQUNsQjtNQUNBO01BQ0EsTUFBTUMscUJBQXFCLEdBQUdYLGtCQUFrQixhQUFsQkEsa0JBQWtCLGdEQUFsQkEsa0JBQWtCLENBQUVZLGdCQUFnQixvRkFBcEMsc0JBQXNDTCxXQUFXLHFGQUFqRCx1QkFBbURNLEVBQUUsMkRBQXJELHVCQUF1REMsZUFBZTtNQUNwRyxPQUFPSCxxQkFBcUIsR0FDekJSLGNBQWMsQ0FBQ0gsa0JBQWtCLENBQUMsR0FDbENlLDRCQUE0QixDQUFDVixpQkFBaUIsRUFBRUwsa0JBQWtCLENBQUM7SUFDdkU7SUFDQSxPQUFPLE9BQU87RUFDZixDQUFDOztFQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQVJBO0VBU08sZUFBZWUsNEJBQTRCLENBQ2pEQyxTQUFzQyxFQUN0Q2hCLGtCQUF1QyxFQUNyQjtJQUNsQixNQUFNaUIsT0FBTyxHQUFHRCxTQUFTLENBQUNDLE9BQTZCO0lBQ3ZELE1BQU1DLFNBQVMsR0FBR0YsU0FBUyxDQUFDQyxPQUFPLENBQUNFLFFBQVEsRUFBK0I7SUFFM0UsT0FBTyxNQUFNRCxTQUFTLENBQUNFLG9CQUFvQixDQUFDSCxPQUFPLENBQUNJLE9BQU8sRUFBRSxFQUFFLElBQUksRUFBRUosT0FBTyxDQUFDLENBQUNLLElBQUksQ0FBQyxVQUFVQyxhQUFrQixFQUFFO01BQUE7TUFDaEgsTUFBTUMsUUFBUSxHQUFHQyxNQUFNLENBQUNDLElBQUksQ0FBQ0gsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO01BQzlDLE1BQU1JLGtCQUFrQixHQUFHSixhQUFhLENBQUNDLFFBQVEsQ0FBQztNQUNsRCxNQUFNSSxrQkFBa0IsNEJBQUdELGtCQUFrQixDQUFDRSxVQUFVLDBEQUE3QixzQkFBK0JDLElBQUksQ0FBRUMsT0FBWSxJQUFLO1FBQUE7UUFDaEYsT0FBTywwQkFBQUEsT0FBTyxDQUFDQyxpQkFBaUIsMERBQXpCLHNCQUEyQkMsYUFBYSxPQUFLakMsa0JBQWtCLGFBQWxCQSxrQkFBa0IsaURBQWxCQSxrQkFBa0IsQ0FBRWtDLFlBQVksMkRBQWhDLHVCQUFrQ0MsSUFBSTtNQUMzRixDQUFDLENBQUM7TUFDRixNQUFNQyxpQkFBaUIsR0FBR1Isa0JBQWtCLGFBQWxCQSxrQkFBa0IsdUJBQWxCQSxrQkFBa0IsQ0FBRVMsaUJBQWlCO01BRS9ELE1BQU1DLGNBQWMsR0FBR3BCLFNBQVMsQ0FBQ3FCLFNBQVMsQ0FDekMsR0FBRyxHQUFHWixrQkFBa0IsQ0FBQ2EsY0FBYyxHQUFHLEdBQUcsR0FBR0osaUJBQWlCLEdBQUcsc0NBQXNDLENBQzFHO01BQ0QsT0FBT0UsY0FBYyxHQUFHLGtCQUFrQixHQUFHLE9BQU87SUFDckQsQ0FBQyxDQUFDO0VBQ0g7RUFBQztFQUFBO0FBQUEifQ==