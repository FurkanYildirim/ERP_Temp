/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["../field/FieldRuntime"], function (FieldRuntime) {
  "use strict";

  const multiValueFieldRuntime = {
    /**
     * Handler for the change event.
     *
     * Used to request SideEffects based on the validity of change.
     *
     * @param controller The controller of the page containing the field
     * @param event The event object passed by the change event
     */
    handleChange: function (controller, event) {
      const sourcefield = event.getSource(),
        isTransient = sourcefield.getBindingContext().isTransient(),
        isValueResolved = event.getParameter("promise") || Promise.resolve();

      // Use the FE Controller instead of the extensionAPI to access internal FE controllers
      const feController = FieldRuntime._getExtensionController(controller);
      feController.editFlow.syncTask(isValueResolved);

      // if the context is transient, it means the request would fail anyway as the record does not exist in reality
      if (isTransient) {
        return;
      }
      feController._sideEffects.handleFieldChange(event, true, isValueResolved);
    },
    /**
     * Handler for the validateFieldGroup event.
     *
     * @param controller The controller of the page containing the field
     * @param event The event object passed by the validateFieldGroup event
     */
    onValidateFieldGroup: async function (controller, event) {
      const feController = FieldRuntime._getExtensionController(controller);
      await feController._sideEffects.handleFieldGroupChange(event);
    }
  };
  return multiValueFieldRuntime;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtdWx0aVZhbHVlRmllbGRSdW50aW1lIiwiaGFuZGxlQ2hhbmdlIiwiY29udHJvbGxlciIsImV2ZW50Iiwic291cmNlZmllbGQiLCJnZXRTb3VyY2UiLCJpc1RyYW5zaWVudCIsImdldEJpbmRpbmdDb250ZXh0IiwiaXNWYWx1ZVJlc29sdmVkIiwiZ2V0UGFyYW1ldGVyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJmZUNvbnRyb2xsZXIiLCJGaWVsZFJ1bnRpbWUiLCJfZ2V0RXh0ZW5zaW9uQ29udHJvbGxlciIsImVkaXRGbG93Iiwic3luY1Rhc2siLCJfc2lkZUVmZmVjdHMiLCJoYW5kbGVGaWVsZENoYW5nZSIsIm9uVmFsaWRhdGVGaWVsZEdyb3VwIiwiaGFuZGxlRmllbGRHcm91cENoYW5nZSJdLCJzb3VyY2VSb290IjoiLiIsInNvdXJjZXMiOlsiTXVsdGlWYWx1ZUZpZWxkUnVudGltZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSBQYWdlQ29udHJvbGxlciBmcm9tIFwic2FwL2ZlL2NvcmUvUGFnZUNvbnRyb2xsZXJcIjtcbmltcG9ydCB0eXBlIEV2ZW50IGZyb20gXCJzYXAvdWkvYmFzZS9FdmVudFwiO1xuaW1wb3J0IHR5cGUgQ29udHJvbCBmcm9tIFwic2FwL3VpL2NvcmUvQ29udHJvbFwiO1xuaW1wb3J0IHR5cGUgQ29udGV4dCBmcm9tIFwic2FwL3VpL21vZGVsL29kYXRhL3Y0L0NvbnRleHRcIjtcbmltcG9ydCBGaWVsZFJ1bnRpbWUgZnJvbSBcIi4uL2ZpZWxkL0ZpZWxkUnVudGltZVwiO1xuXG5jb25zdCBtdWx0aVZhbHVlRmllbGRSdW50aW1lID0ge1xuXHQvKipcblx0ICogSGFuZGxlciBmb3IgdGhlIGNoYW5nZSBldmVudC5cblx0ICpcblx0ICogVXNlZCB0byByZXF1ZXN0IFNpZGVFZmZlY3RzIGJhc2VkIG9uIHRoZSB2YWxpZGl0eSBvZiBjaGFuZ2UuXG5cdCAqXG5cdCAqIEBwYXJhbSBjb250cm9sbGVyIFRoZSBjb250cm9sbGVyIG9mIHRoZSBwYWdlIGNvbnRhaW5pbmcgdGhlIGZpZWxkXG5cdCAqIEBwYXJhbSBldmVudCBUaGUgZXZlbnQgb2JqZWN0IHBhc3NlZCBieSB0aGUgY2hhbmdlIGV2ZW50XG5cdCAqL1xuXHRoYW5kbGVDaGFuZ2U6IGZ1bmN0aW9uIChjb250cm9sbGVyOiBQYWdlQ29udHJvbGxlciwgZXZlbnQ6IEV2ZW50KSB7XG5cdFx0Y29uc3Qgc291cmNlZmllbGQgPSBldmVudC5nZXRTb3VyY2UoKSBhcyBDb250cm9sLFxuXHRcdFx0aXNUcmFuc2llbnQgPSAoc291cmNlZmllbGQuZ2V0QmluZGluZ0NvbnRleHQoKSBhcyBDb250ZXh0KS5pc1RyYW5zaWVudCgpLFxuXHRcdFx0aXNWYWx1ZVJlc29sdmVkID0gKGV2ZW50LmdldFBhcmFtZXRlcihcInByb21pc2VcIikgYXMgUHJvbWlzZTxzdHJpbmc+IHwgdW5kZWZpbmVkKSB8fCBQcm9taXNlLnJlc29sdmUoKTtcblxuXHRcdC8vIFVzZSB0aGUgRkUgQ29udHJvbGxlciBpbnN0ZWFkIG9mIHRoZSBleHRlbnNpb25BUEkgdG8gYWNjZXNzIGludGVybmFsIEZFIGNvbnRyb2xsZXJzXG5cdFx0Y29uc3QgZmVDb250cm9sbGVyID0gRmllbGRSdW50aW1lLl9nZXRFeHRlbnNpb25Db250cm9sbGVyKGNvbnRyb2xsZXIpIGFzIFBhZ2VDb250cm9sbGVyO1xuXG5cdFx0ZmVDb250cm9sbGVyLmVkaXRGbG93LnN5bmNUYXNrKGlzVmFsdWVSZXNvbHZlZCkgYXMgUHJvbWlzZTx1bmRlZmluZWQ+O1xuXG5cdFx0Ly8gaWYgdGhlIGNvbnRleHQgaXMgdHJhbnNpZW50LCBpdCBtZWFucyB0aGUgcmVxdWVzdCB3b3VsZCBmYWlsIGFueXdheSBhcyB0aGUgcmVjb3JkIGRvZXMgbm90IGV4aXN0IGluIHJlYWxpdHlcblx0XHRpZiAoaXNUcmFuc2llbnQpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRmZUNvbnRyb2xsZXIuX3NpZGVFZmZlY3RzLmhhbmRsZUZpZWxkQ2hhbmdlKGV2ZW50LCB0cnVlLCBpc1ZhbHVlUmVzb2x2ZWQpIGFzIFByb21pc2U8dW5kZWZpbmVkPjtcblx0fSxcblxuXHQvKipcblx0ICogSGFuZGxlciBmb3IgdGhlIHZhbGlkYXRlRmllbGRHcm91cCBldmVudC5cblx0ICpcblx0ICogQHBhcmFtIGNvbnRyb2xsZXIgVGhlIGNvbnRyb2xsZXIgb2YgdGhlIHBhZ2UgY29udGFpbmluZyB0aGUgZmllbGRcblx0ICogQHBhcmFtIGV2ZW50IFRoZSBldmVudCBvYmplY3QgcGFzc2VkIGJ5IHRoZSB2YWxpZGF0ZUZpZWxkR3JvdXAgZXZlbnRcblx0ICovXG5cdG9uVmFsaWRhdGVGaWVsZEdyb3VwOiBhc3luYyBmdW5jdGlvbiAoY29udHJvbGxlcjogUGFnZUNvbnRyb2xsZXIsIGV2ZW50OiBFdmVudCkge1xuXHRcdGNvbnN0IGZlQ29udHJvbGxlciA9IEZpZWxkUnVudGltZS5fZ2V0RXh0ZW5zaW9uQ29udHJvbGxlcihjb250cm9sbGVyKSBhcyBQYWdlQ29udHJvbGxlcjtcblx0XHRhd2FpdCBmZUNvbnRyb2xsZXIuX3NpZGVFZmZlY3RzLmhhbmRsZUZpZWxkR3JvdXBDaGFuZ2UoZXZlbnQpO1xuXHR9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtdWx0aVZhbHVlRmllbGRSdW50aW1lO1xuIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQTtBQUFBOzs7O0VBTUEsTUFBTUEsc0JBQXNCLEdBQUc7SUFDOUI7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtJQUNDQyxZQUFZLEVBQUUsVUFBVUMsVUFBMEIsRUFBRUMsS0FBWSxFQUFFO01BQ2pFLE1BQU1DLFdBQVcsR0FBR0QsS0FBSyxDQUFDRSxTQUFTLEVBQWE7UUFDL0NDLFdBQVcsR0FBSUYsV0FBVyxDQUFDRyxpQkFBaUIsRUFBRSxDQUFhRCxXQUFXLEVBQUU7UUFDeEVFLGVBQWUsR0FBSUwsS0FBSyxDQUFDTSxZQUFZLENBQUMsU0FBUyxDQUFDLElBQW9DQyxPQUFPLENBQUNDLE9BQU8sRUFBRTs7TUFFdEc7TUFDQSxNQUFNQyxZQUFZLEdBQUdDLFlBQVksQ0FBQ0MsdUJBQXVCLENBQUNaLFVBQVUsQ0FBbUI7TUFFdkZVLFlBQVksQ0FBQ0csUUFBUSxDQUFDQyxRQUFRLENBQUNSLGVBQWUsQ0FBQzs7TUFFL0M7TUFDQSxJQUFJRixXQUFXLEVBQUU7UUFDaEI7TUFDRDtNQUVBTSxZQUFZLENBQUNLLFlBQVksQ0FBQ0MsaUJBQWlCLENBQUNmLEtBQUssRUFBRSxJQUFJLEVBQUVLLGVBQWUsQ0FBQztJQUMxRSxDQUFDO0lBRUQ7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0lBQ0NXLG9CQUFvQixFQUFFLGdCQUFnQmpCLFVBQTBCLEVBQUVDLEtBQVksRUFBRTtNQUMvRSxNQUFNUyxZQUFZLEdBQUdDLFlBQVksQ0FBQ0MsdUJBQXVCLENBQUNaLFVBQVUsQ0FBbUI7TUFDdkYsTUFBTVUsWUFBWSxDQUFDSyxZQUFZLENBQUNHLHNCQUFzQixDQUFDakIsS0FBSyxDQUFDO0lBQzlEO0VBQ0QsQ0FBQztFQUFDLE9BRWFILHNCQUFzQjtBQUFBIn0=