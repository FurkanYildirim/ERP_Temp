/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["sap/fe/core/controllerextensions/collaboration/CollaborationCommon", "sap/ui/core/Core"], function (CollaborationCommon, Core) {
  "use strict";

  var _exports = {};
  var getActivityKeyFromPath = CollaborationCommon.getActivityKeyFromPath;
  const collaborationFormatters = function (sName) {
    if (collaborationFormatters.hasOwnProperty(sName)) {
      for (var _len = arguments.length, oArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        oArgs[_key - 1] = arguments[_key];
      }
      return collaborationFormatters[sName].apply(this, oArgs);
    } else {
      return "";
    }
  };
  const hasCollaborationActivity = function (activities) {
    return !!getCollaborationActivity(activities, this);
  };
  hasCollaborationActivity.__functionName = "sap.fe.core.formatters.CollaborationFormatter#hasCollaborationActivity";
  _exports.hasCollaborationActivity = hasCollaborationActivity;
  const getCollaborationActivityInitials = function (activities) {
    const activity = getCollaborationActivity(activities, this);
    return activity === null || activity === void 0 ? void 0 : activity.initials;
  };
  getCollaborationActivityInitials.__functionName = "sap.fe.core.formatters.CollaborationFormatter#getCollaborationActivityInitials";
  _exports.getCollaborationActivityInitials = getCollaborationActivityInitials;
  const getCollaborationActivityColor = function (activities) {
    const activity = getCollaborationActivity(activities, this);
    return activity !== null && activity !== void 0 && activity.color ? `Accent${activity.color}` : undefined;
  };
  getCollaborationActivityColor.__functionName = "sap.fe.core.formatters.CollaborationFormatter#getCollaborationActivityColor";
  _exports.getCollaborationActivityColor = getCollaborationActivityColor;
  function getCollaborationActivity(activities, control) {
    var _control$getBindingCo;
    const path = control === null || control === void 0 ? void 0 : (_control$getBindingCo = control.getBindingContext()) === null || _control$getBindingCo === void 0 ? void 0 : _control$getBindingCo.getPath();
    if (!path) {
      return undefined;
    }
    const activityKey = getActivityKeyFromPath(path);
    if (activities && activities.length > 0) {
      return activities.find(activity => {
        return activity.key === activityKey;
      });
    } else {
      return undefined;
    }
  }

  /**
   * Compute the Invitation dialog title based on the underlying resource bundle.
   *
   * @param args The inner function parameters
   * @returns The dialog title
   */
  const getFormattedText = function () {
    const textId = arguments.length <= 0 ? undefined : arguments[0];
    const resourceModel = Core.getLibraryResourceBundle("sap.fe.core");
    const params = [];
    for (let i = 1; i < arguments.length; i++) {
      params.push(i < 0 || arguments.length <= i ? undefined : arguments[i]);
    }
    return resourceModel.getText(textId, params);
  };
  getFormattedText.__functionName = "sap.fe.core.formatters.CollaborationFormatter#getFormattedText";
  _exports.getFormattedText = getFormattedText;
  collaborationFormatters.hasCollaborationActivity = hasCollaborationActivity;
  collaborationFormatters.getCollaborationActivityInitials = getCollaborationActivityInitials;
  collaborationFormatters.getCollaborationActivityColor = getCollaborationActivityColor;
  collaborationFormatters.getFormattedText = getFormattedText;
  /**
   * @global
   */
  return collaborationFormatters;
}, true);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb2xsYWJvcmF0aW9uRm9ybWF0dGVycyIsInNOYW1lIiwiaGFzT3duUHJvcGVydHkiLCJvQXJncyIsImFwcGx5IiwiaGFzQ29sbGFib3JhdGlvbkFjdGl2aXR5IiwiYWN0aXZpdGllcyIsImdldENvbGxhYm9yYXRpb25BY3Rpdml0eSIsIl9fZnVuY3Rpb25OYW1lIiwiZ2V0Q29sbGFib3JhdGlvbkFjdGl2aXR5SW5pdGlhbHMiLCJhY3Rpdml0eSIsImluaXRpYWxzIiwiZ2V0Q29sbGFib3JhdGlvbkFjdGl2aXR5Q29sb3IiLCJjb2xvciIsInVuZGVmaW5lZCIsImNvbnRyb2wiLCJwYXRoIiwiZ2V0QmluZGluZ0NvbnRleHQiLCJnZXRQYXRoIiwiYWN0aXZpdHlLZXkiLCJnZXRBY3Rpdml0eUtleUZyb21QYXRoIiwibGVuZ3RoIiwiZmluZCIsImtleSIsImdldEZvcm1hdHRlZFRleHQiLCJ0ZXh0SWQiLCJyZXNvdXJjZU1vZGVsIiwiQ29yZSIsImdldExpYnJhcnlSZXNvdXJjZUJ1bmRsZSIsInBhcmFtcyIsImkiLCJwdXNoIiwiZ2V0VGV4dCJdLCJzb3VyY2VSb290IjoiLiIsInNvdXJjZXMiOlsiQ29sbGFib3JhdGlvbkZvcm1hdHRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbGxlY3Rpb24gb2YgZm9ybWF0dGVycyBuZWVkZWQgZm9yIHRoZSBjb2xsYWJvcmF0aW9uIGRyYWZ0LlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSB0aGlzIFRoZSBjb250ZXh0XG4gKiBAcGFyYW0ge3N0cmluZ30gc05hbWUgVGhlIGlubmVyIGZ1bmN0aW9uIG5hbWVcbiAqIEBwYXJhbSB7b2JqZWN0W119IG9BcmdzIFRoZSBpbm5lciBmdW5jdGlvbiBwYXJhbWV0ZXJzXG4gKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgdmFsdWUgZnJvbSB0aGUgaW5uZXIgZnVuY3Rpb25cbiAqL1xuXG5pbXBvcnQgeyBnZXRBY3Rpdml0eUtleUZyb21QYXRoLCBVc2VyQWN0aXZpdHkgfSBmcm9tIFwic2FwL2ZlL2NvcmUvY29udHJvbGxlcmV4dGVuc2lvbnMvY29sbGFib3JhdGlvbi9Db2xsYWJvcmF0aW9uQ29tbW9uXCI7XG5pbXBvcnQgTWFuYWdlZE9iamVjdCBmcm9tIFwic2FwL3VpL2Jhc2UvTWFuYWdlZE9iamVjdFwiO1xuaW1wb3J0IENvcmUgZnJvbSBcInNhcC91aS9jb3JlL0NvcmVcIjtcblxuY29uc3QgY29sbGFib3JhdGlvbkZvcm1hdHRlcnMgPSBmdW5jdGlvbiAodGhpczogb2JqZWN0LCBzTmFtZTogc3RyaW5nLCAuLi5vQXJnczogYW55W10pOiBhbnkge1xuXHRpZiAoY29sbGFib3JhdGlvbkZvcm1hdHRlcnMuaGFzT3duUHJvcGVydHkoc05hbWUpKSB7XG5cdFx0cmV0dXJuIChjb2xsYWJvcmF0aW9uRm9ybWF0dGVycyBhcyBhbnkpW3NOYW1lXS5hcHBseSh0aGlzLCBvQXJncyk7XG5cdH0gZWxzZSB7XG5cdFx0cmV0dXJuIFwiXCI7XG5cdH1cbn07XG5leHBvcnQgY29uc3QgaGFzQ29sbGFib3JhdGlvbkFjdGl2aXR5ID0gZnVuY3Rpb24gKHRoaXM6IE1hbmFnZWRPYmplY3QsIGFjdGl2aXRpZXM6IFVzZXJBY3Rpdml0eVtdLCAuLi5fa2V5czogYW55W10pOiBib29sZWFuIHwgdW5kZWZpbmVkIHtcblx0cmV0dXJuICEhZ2V0Q29sbGFib3JhdGlvbkFjdGl2aXR5KGFjdGl2aXRpZXMsIHRoaXMpO1xufTtcbmhhc0NvbGxhYm9yYXRpb25BY3Rpdml0eS5fX2Z1bmN0aW9uTmFtZSA9IFwic2FwLmZlLmNvcmUuZm9ybWF0dGVycy5Db2xsYWJvcmF0aW9uRm9ybWF0dGVyI2hhc0NvbGxhYm9yYXRpb25BY3Rpdml0eVwiO1xuXG5leHBvcnQgY29uc3QgZ2V0Q29sbGFib3JhdGlvbkFjdGl2aXR5SW5pdGlhbHMgPSBmdW5jdGlvbiAoXG5cdHRoaXM6IE1hbmFnZWRPYmplY3QsXG5cdGFjdGl2aXRpZXM6IFVzZXJBY3Rpdml0eVtdLFxuXHQuLi5fa2V5czogYW55W11cbik6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG5cdGNvbnN0IGFjdGl2aXR5ID0gZ2V0Q29sbGFib3JhdGlvbkFjdGl2aXR5KGFjdGl2aXRpZXMsIHRoaXMpO1xuXHRyZXR1cm4gYWN0aXZpdHk/LmluaXRpYWxzO1xufTtcbmdldENvbGxhYm9yYXRpb25BY3Rpdml0eUluaXRpYWxzLl9fZnVuY3Rpb25OYW1lID0gXCJzYXAuZmUuY29yZS5mb3JtYXR0ZXJzLkNvbGxhYm9yYXRpb25Gb3JtYXR0ZXIjZ2V0Q29sbGFib3JhdGlvbkFjdGl2aXR5SW5pdGlhbHNcIjtcblxuZXhwb3J0IGNvbnN0IGdldENvbGxhYm9yYXRpb25BY3Rpdml0eUNvbG9yID0gZnVuY3Rpb24gKFxuXHR0aGlzOiBNYW5hZ2VkT2JqZWN0LFxuXHRhY3Rpdml0aWVzOiBVc2VyQWN0aXZpdHlbXSxcblx0Li4uX2tleXM6IGFueVtdXG4pOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuXHRjb25zdCBhY3Rpdml0eSA9IGdldENvbGxhYm9yYXRpb25BY3Rpdml0eShhY3Rpdml0aWVzLCB0aGlzKTtcblx0cmV0dXJuIGFjdGl2aXR5Py5jb2xvciA/IGBBY2NlbnQke2FjdGl2aXR5LmNvbG9yfWAgOiB1bmRlZmluZWQ7XG59O1xuZ2V0Q29sbGFib3JhdGlvbkFjdGl2aXR5Q29sb3IuX19mdW5jdGlvbk5hbWUgPSBcInNhcC5mZS5jb3JlLmZvcm1hdHRlcnMuQ29sbGFib3JhdGlvbkZvcm1hdHRlciNnZXRDb2xsYWJvcmF0aW9uQWN0aXZpdHlDb2xvclwiO1xuXG5mdW5jdGlvbiBnZXRDb2xsYWJvcmF0aW9uQWN0aXZpdHkoYWN0aXZpdGllcz86IFVzZXJBY3Rpdml0eVtdLCBjb250cm9sPzogTWFuYWdlZE9iamVjdCkge1xuXHRjb25zdCBwYXRoID0gY29udHJvbD8uZ2V0QmluZGluZ0NvbnRleHQoKT8uZ2V0UGF0aCgpO1xuXHRpZiAoIXBhdGgpIHtcblx0XHRyZXR1cm4gdW5kZWZpbmVkO1xuXHR9XG5cdGNvbnN0IGFjdGl2aXR5S2V5ID0gZ2V0QWN0aXZpdHlLZXlGcm9tUGF0aChwYXRoKTtcblx0aWYgKGFjdGl2aXRpZXMgJiYgYWN0aXZpdGllcy5sZW5ndGggPiAwKSB7XG5cdFx0cmV0dXJuIGFjdGl2aXRpZXMuZmluZCgoYWN0aXZpdHkpID0+IHtcblx0XHRcdHJldHVybiBhY3Rpdml0eS5rZXkgPT09IGFjdGl2aXR5S2V5O1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdH1cbn1cblxuLyoqXG4gKiBDb21wdXRlIHRoZSBJbnZpdGF0aW9uIGRpYWxvZyB0aXRsZSBiYXNlZCBvbiB0aGUgdW5kZXJseWluZyByZXNvdXJjZSBidW5kbGUuXG4gKlxuICogQHBhcmFtIGFyZ3MgVGhlIGlubmVyIGZ1bmN0aW9uIHBhcmFtZXRlcnNcbiAqIEByZXR1cm5zIFRoZSBkaWFsb2cgdGl0bGVcbiAqL1xuZXhwb3J0IGNvbnN0IGdldEZvcm1hdHRlZFRleHQgPSAoLi4uYXJnczogc3RyaW5nW10pOiBzdHJpbmcgPT4ge1xuXHRjb25zdCB0ZXh0SWQgPSBhcmdzWzBdO1xuXHRjb25zdCByZXNvdXJjZU1vZGVsID0gQ29yZS5nZXRMaWJyYXJ5UmVzb3VyY2VCdW5kbGUoXCJzYXAuZmUuY29yZVwiKTtcblx0Y29uc3QgcGFyYW1zID0gW107XG5cdGZvciAobGV0IGkgPSAxOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuXHRcdHBhcmFtcy5wdXNoKGFyZ3NbaV0pO1xuXHR9XG5cdHJldHVybiByZXNvdXJjZU1vZGVsLmdldFRleHQodGV4dElkLCBwYXJhbXMpO1xufTtcblxuZ2V0Rm9ybWF0dGVkVGV4dC5fX2Z1bmN0aW9uTmFtZSA9IFwic2FwLmZlLmNvcmUuZm9ybWF0dGVycy5Db2xsYWJvcmF0aW9uRm9ybWF0dGVyI2dldEZvcm1hdHRlZFRleHRcIjtcblxuY29sbGFib3JhdGlvbkZvcm1hdHRlcnMuaGFzQ29sbGFib3JhdGlvbkFjdGl2aXR5ID0gaGFzQ29sbGFib3JhdGlvbkFjdGl2aXR5O1xuY29sbGFib3JhdGlvbkZvcm1hdHRlcnMuZ2V0Q29sbGFib3JhdGlvbkFjdGl2aXR5SW5pdGlhbHMgPSBnZXRDb2xsYWJvcmF0aW9uQWN0aXZpdHlJbml0aWFscztcbmNvbGxhYm9yYXRpb25Gb3JtYXR0ZXJzLmdldENvbGxhYm9yYXRpb25BY3Rpdml0eUNvbG9yID0gZ2V0Q29sbGFib3JhdGlvbkFjdGl2aXR5Q29sb3I7XG5jb2xsYWJvcmF0aW9uRm9ybWF0dGVycy5nZXRGb3JtYXR0ZWRUZXh0ID0gZ2V0Rm9ybWF0dGVkVGV4dDtcbi8qKlxuICogQGdsb2JhbFxuICovXG5leHBvcnQgZGVmYXVsdCBjb2xsYWJvcmF0aW9uRm9ybWF0dGVycztcbiJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQUE7QUFBQTs7Ozs7O0VBYUEsTUFBTUEsdUJBQXVCLEdBQUcsVUFBd0JDLEtBQWEsRUFBd0I7SUFDNUYsSUFBSUQsdUJBQXVCLENBQUNFLGNBQWMsQ0FBQ0QsS0FBSyxDQUFDLEVBQUU7TUFBQSxrQ0FEc0JFLEtBQUs7UUFBTEEsS0FBSztNQUFBO01BRTdFLE9BQVFILHVCQUF1QixDQUFTQyxLQUFLLENBQUMsQ0FBQ0csS0FBSyxDQUFDLElBQUksRUFBRUQsS0FBSyxDQUFDO0lBQ2xFLENBQUMsTUFBTTtNQUNOLE9BQU8sRUFBRTtJQUNWO0VBQ0QsQ0FBQztFQUNNLE1BQU1FLHdCQUF3QixHQUFHLFVBQStCQyxVQUEwQixFQUF3QztJQUN4SSxPQUFPLENBQUMsQ0FBQ0Msd0JBQXdCLENBQUNELFVBQVUsRUFBRSxJQUFJLENBQUM7RUFDcEQsQ0FBQztFQUNERCx3QkFBd0IsQ0FBQ0csY0FBYyxHQUFHLHdFQUF3RTtFQUFDO0VBRTVHLE1BQU1DLGdDQUFnQyxHQUFHLFVBRS9DSCxVQUEwQixFQUVMO0lBQ3JCLE1BQU1JLFFBQVEsR0FBR0gsd0JBQXdCLENBQUNELFVBQVUsRUFBRSxJQUFJLENBQUM7SUFDM0QsT0FBT0ksUUFBUSxhQUFSQSxRQUFRLHVCQUFSQSxRQUFRLENBQUVDLFFBQVE7RUFDMUIsQ0FBQztFQUNERixnQ0FBZ0MsQ0FBQ0QsY0FBYyxHQUFHLGdGQUFnRjtFQUFDO0VBRTVILE1BQU1JLDZCQUE2QixHQUFHLFVBRTVDTixVQUEwQixFQUVMO0lBQ3JCLE1BQU1JLFFBQVEsR0FBR0gsd0JBQXdCLENBQUNELFVBQVUsRUFBRSxJQUFJLENBQUM7SUFDM0QsT0FBT0ksUUFBUSxhQUFSQSxRQUFRLGVBQVJBLFFBQVEsQ0FBRUcsS0FBSyxHQUFJLFNBQVFILFFBQVEsQ0FBQ0csS0FBTSxFQUFDLEdBQUdDLFNBQVM7RUFDL0QsQ0FBQztFQUNERiw2QkFBNkIsQ0FBQ0osY0FBYyxHQUFHLDZFQUE2RTtFQUFDO0VBRTdILFNBQVNELHdCQUF3QixDQUFDRCxVQUEyQixFQUFFUyxPQUF1QixFQUFFO0lBQUE7SUFDdkYsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLGFBQVBBLE9BQU8sZ0RBQVBBLE9BQU8sQ0FBRUUsaUJBQWlCLEVBQUUsMERBQTVCLHNCQUE4QkMsT0FBTyxFQUFFO0lBQ3BELElBQUksQ0FBQ0YsSUFBSSxFQUFFO01BQ1YsT0FBT0YsU0FBUztJQUNqQjtJQUNBLE1BQU1LLFdBQVcsR0FBR0Msc0JBQXNCLENBQUNKLElBQUksQ0FBQztJQUNoRCxJQUFJVixVQUFVLElBQUlBLFVBQVUsQ0FBQ2UsTUFBTSxHQUFHLENBQUMsRUFBRTtNQUN4QyxPQUFPZixVQUFVLENBQUNnQixJQUFJLENBQUVaLFFBQVEsSUFBSztRQUNwQyxPQUFPQSxRQUFRLENBQUNhLEdBQUcsS0FBS0osV0FBVztNQUNwQyxDQUFDLENBQUM7SUFDSCxDQUFDLE1BQU07TUFDTixPQUFPTCxTQUFTO0lBQ2pCO0VBQ0Q7O0VBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ08sTUFBTVUsZ0JBQWdCLEdBQUcsWUFBK0I7SUFDOUQsTUFBTUMsTUFBTSxtREFBVTtJQUN0QixNQUFNQyxhQUFhLEdBQUdDLElBQUksQ0FBQ0Msd0JBQXdCLENBQUMsYUFBYSxDQUFDO0lBQ2xFLE1BQU1DLE1BQU0sR0FBRyxFQUFFO0lBQ2pCLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHLFVBQUtULE1BQU0sRUFBRVMsQ0FBQyxFQUFFLEVBQUU7TUFDckNELE1BQU0sQ0FBQ0UsSUFBSSxDQUFNRCxDQUFDLDRCQUFEQSxDQUFDLHlCQUFEQSxDQUFDLEVBQUU7SUFDckI7SUFDQSxPQUFPSixhQUFhLENBQUNNLE9BQU8sQ0FBQ1AsTUFBTSxFQUFFSSxNQUFNLENBQUM7RUFDN0MsQ0FBQztFQUVETCxnQkFBZ0IsQ0FBQ2hCLGNBQWMsR0FBRyxnRUFBZ0U7RUFBQztFQUVuR1IsdUJBQXVCLENBQUNLLHdCQUF3QixHQUFHQSx3QkFBd0I7RUFDM0VMLHVCQUF1QixDQUFDUyxnQ0FBZ0MsR0FBR0EsZ0NBQWdDO0VBQzNGVCx1QkFBdUIsQ0FBQ1ksNkJBQTZCLEdBQUdBLDZCQUE2QjtFQUNyRlosdUJBQXVCLENBQUN3QixnQkFBZ0IsR0FBR0EsZ0JBQWdCO0VBQzNEO0FBQ0E7QUFDQTtFQUZBLE9BR2V4Qix1QkFBdUI7QUFBQSJ9