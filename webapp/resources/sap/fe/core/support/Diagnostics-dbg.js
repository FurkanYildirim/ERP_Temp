/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define([], function () {
  "use strict";

  let Diagnostics = /*#__PURE__*/function () {
    function Diagnostics() {
      this._issues = [];
    }
    var _proto = Diagnostics.prototype;
    _proto.addIssue = function addIssue(issueCategory, issueSeverity, details, issueCategoryType, subCategory) {
      const checkIfIssueExists = this.checkIfIssueExists(issueCategory, issueSeverity, details, issueCategoryType, subCategory);
      if (!checkIfIssueExists) {
        this._issues.push({
          category: issueCategory,
          severity: issueSeverity,
          details: details,
          subCategory: subCategory
        });
      }
    };
    _proto.getIssues = function getIssues() {
      return this._issues;
    };
    _proto.getIssuesByCategory = function getIssuesByCategory(inCategory, subCategory) {
      if (subCategory) {
        return this._issues.filter(issue => issue.category === inCategory && issue.subCategory === subCategory);
      } else {
        return this._issues.filter(issue => issue.category === inCategory);
      }
    };
    _proto.checkIfIssueExists = function checkIfIssueExists(inCategory, severity, details, issueCategoryType, issueSubCategory) {
      if (issueCategoryType && issueCategoryType[inCategory] && issueSubCategory) {
        return this._issues.some(issue => issue.category === inCategory && issue.severity === severity && issue.details.replace(/\n/g, "") === details.replace(/\n/g, "") && issue.subCategory === issueSubCategory);
      }
      return this._issues.some(issue => issue.category === inCategory && issue.severity === severity && issue.details.replace(/\n/g, "") === details.replace(/\n/g, ""));
    };
    return Diagnostics;
  }();
  return Diagnostics;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEaWFnbm9zdGljcyIsIl9pc3N1ZXMiLCJhZGRJc3N1ZSIsImlzc3VlQ2F0ZWdvcnkiLCJpc3N1ZVNldmVyaXR5IiwiZGV0YWlscyIsImlzc3VlQ2F0ZWdvcnlUeXBlIiwic3ViQ2F0ZWdvcnkiLCJjaGVja0lmSXNzdWVFeGlzdHMiLCJwdXNoIiwiY2F0ZWdvcnkiLCJzZXZlcml0eSIsImdldElzc3VlcyIsImdldElzc3Vlc0J5Q2F0ZWdvcnkiLCJpbkNhdGVnb3J5IiwiZmlsdGVyIiwiaXNzdWUiLCJpc3N1ZVN1YkNhdGVnb3J5Iiwic29tZSIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6Ii4iLCJzb3VyY2VzIjpbIkRpYWdub3N0aWNzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgSXNzdWVDYXRlZ29yeSwgSXNzdWVTZXZlcml0eSB9IGZyb20gXCJzYXAvZmUvY29yZS9jb252ZXJ0ZXJzL2hlbHBlcnMvSXNzdWVNYW5hZ2VyXCI7XG5cbmV4cG9ydCB0eXBlIElzc3VlRGVmaW5pdGlvbiA9IHtcblx0Y2F0ZWdvcnk6IElzc3VlQ2F0ZWdvcnk7XG5cdHNldmVyaXR5OiBJc3N1ZVNldmVyaXR5O1xuXHRkZXRhaWxzOiBzdHJpbmc7XG5cdHN1YkNhdGVnb3J5Pzogc3RyaW5nIHwgdW5kZWZpbmVkO1xufTtcbmNsYXNzIERpYWdub3N0aWNzIHtcblx0X2lzc3VlczogSXNzdWVEZWZpbml0aW9uW107XG5cblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5faXNzdWVzID0gW107XG5cdH1cblxuXHRhZGRJc3N1ZShcblx0XHRpc3N1ZUNhdGVnb3J5OiBJc3N1ZUNhdGVnb3J5LFxuXHRcdGlzc3VlU2V2ZXJpdHk6IElzc3VlU2V2ZXJpdHksXG5cdFx0ZGV0YWlsczogc3RyaW5nLFxuXHRcdGlzc3VlQ2F0ZWdvcnlUeXBlPzogYW55IHwgdW5kZWZpbmVkLFxuXHRcdHN1YkNhdGVnb3J5Pzogc3RyaW5nIHwgdW5kZWZpbmVkXG5cdCk6IHZvaWQge1xuXHRcdGNvbnN0IGNoZWNrSWZJc3N1ZUV4aXN0cyA9IHRoaXMuY2hlY2tJZklzc3VlRXhpc3RzKGlzc3VlQ2F0ZWdvcnksIGlzc3VlU2V2ZXJpdHksIGRldGFpbHMsIGlzc3VlQ2F0ZWdvcnlUeXBlLCBzdWJDYXRlZ29yeSk7XG5cdFx0aWYgKCFjaGVja0lmSXNzdWVFeGlzdHMpIHtcblx0XHRcdHRoaXMuX2lzc3Vlcy5wdXNoKHtcblx0XHRcdFx0Y2F0ZWdvcnk6IGlzc3VlQ2F0ZWdvcnksXG5cdFx0XHRcdHNldmVyaXR5OiBpc3N1ZVNldmVyaXR5LFxuXHRcdFx0XHRkZXRhaWxzOiBkZXRhaWxzLFxuXHRcdFx0XHRzdWJDYXRlZ29yeTogc3ViQ2F0ZWdvcnlcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxuXG5cdGdldElzc3VlcygpOiBJc3N1ZURlZmluaXRpb25bXSB7XG5cdFx0cmV0dXJuIHRoaXMuX2lzc3Vlcztcblx0fVxuXG5cdGdldElzc3Vlc0J5Q2F0ZWdvcnkoaW5DYXRlZ29yeTogSXNzdWVDYXRlZ29yeSwgc3ViQ2F0ZWdvcnk/OiBzdHJpbmcpOiBJc3N1ZURlZmluaXRpb25bXSB7XG5cdFx0aWYgKHN1YkNhdGVnb3J5KSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5faXNzdWVzLmZpbHRlcigoaXNzdWUpID0+IGlzc3VlLmNhdGVnb3J5ID09PSBpbkNhdGVnb3J5ICYmIGlzc3VlLnN1YkNhdGVnb3J5ID09PSBzdWJDYXRlZ29yeSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiB0aGlzLl9pc3N1ZXMuZmlsdGVyKChpc3N1ZSkgPT4gaXNzdWUuY2F0ZWdvcnkgPT09IGluQ2F0ZWdvcnkpO1xuXHRcdH1cblx0fVxuXG5cdGNoZWNrSWZJc3N1ZUV4aXN0cyhcblx0XHRpbkNhdGVnb3J5OiBJc3N1ZUNhdGVnb3J5LFxuXHRcdHNldmVyaXR5OiBJc3N1ZVNldmVyaXR5LFxuXHRcdGRldGFpbHM6IHN0cmluZyxcblx0XHRpc3N1ZUNhdGVnb3J5VHlwZT86IGFueSxcblx0XHRpc3N1ZVN1YkNhdGVnb3J5Pzogc3RyaW5nXG5cdCk6IGJvb2xlYW4ge1xuXHRcdGlmIChpc3N1ZUNhdGVnb3J5VHlwZSAmJiBpc3N1ZUNhdGVnb3J5VHlwZVtpbkNhdGVnb3J5XSAmJiBpc3N1ZVN1YkNhdGVnb3J5KSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5faXNzdWVzLnNvbWUoXG5cdFx0XHRcdChpc3N1ZSkgPT5cblx0XHRcdFx0XHRpc3N1ZS5jYXRlZ29yeSA9PT0gaW5DYXRlZ29yeSAmJlxuXHRcdFx0XHRcdGlzc3VlLnNldmVyaXR5ID09PSBzZXZlcml0eSAmJlxuXHRcdFx0XHRcdGlzc3VlLmRldGFpbHMucmVwbGFjZSgvXFxuL2csIFwiXCIpID09PSBkZXRhaWxzLnJlcGxhY2UoL1xcbi9nLCBcIlwiKSAmJlxuXHRcdFx0XHRcdGlzc3VlLnN1YkNhdGVnb3J5ID09PSBpc3N1ZVN1YkNhdGVnb3J5XG5cdFx0XHQpO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5faXNzdWVzLnNvbWUoXG5cdFx0XHQoaXNzdWUpID0+XG5cdFx0XHRcdGlzc3VlLmNhdGVnb3J5ID09PSBpbkNhdGVnb3J5ICYmXG5cdFx0XHRcdGlzc3VlLnNldmVyaXR5ID09PSBzZXZlcml0eSAmJlxuXHRcdFx0XHRpc3N1ZS5kZXRhaWxzLnJlcGxhY2UoL1xcbi9nLCBcIlwiKSA9PT0gZGV0YWlscy5yZXBsYWNlKC9cXG4vZywgXCJcIilcblx0XHQpO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERpYWdub3N0aWNzO1xuIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQTtBQUFBOzs7O01BUU1BLFdBQVc7SUFHaEIsdUJBQWM7TUFDYixJQUFJLENBQUNDLE9BQU8sR0FBRyxFQUFFO0lBQ2xCO0lBQUM7SUFBQSxPQUVEQyxRQUFRLEdBQVIsa0JBQ0NDLGFBQTRCLEVBQzVCQyxhQUE0QixFQUM1QkMsT0FBZSxFQUNmQyxpQkFBbUMsRUFDbkNDLFdBQWdDLEVBQ3pCO01BQ1AsTUFBTUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDQSxrQkFBa0IsQ0FBQ0wsYUFBYSxFQUFFQyxhQUFhLEVBQUVDLE9BQU8sRUFBRUMsaUJBQWlCLEVBQUVDLFdBQVcsQ0FBQztNQUN6SCxJQUFJLENBQUNDLGtCQUFrQixFQUFFO1FBQ3hCLElBQUksQ0FBQ1AsT0FBTyxDQUFDUSxJQUFJLENBQUM7VUFDakJDLFFBQVEsRUFBRVAsYUFBYTtVQUN2QlEsUUFBUSxFQUFFUCxhQUFhO1VBQ3ZCQyxPQUFPLEVBQUVBLE9BQU87VUFDaEJFLFdBQVcsRUFBRUE7UUFDZCxDQUFDLENBQUM7TUFDSDtJQUNELENBQUM7SUFBQSxPQUVESyxTQUFTLEdBQVQscUJBQStCO01BQzlCLE9BQU8sSUFBSSxDQUFDWCxPQUFPO0lBQ3BCLENBQUM7SUFBQSxPQUVEWSxtQkFBbUIsR0FBbkIsNkJBQW9CQyxVQUF5QixFQUFFUCxXQUFvQixFQUFxQjtNQUN2RixJQUFJQSxXQUFXLEVBQUU7UUFDaEIsT0FBTyxJQUFJLENBQUNOLE9BQU8sQ0FBQ2MsTUFBTSxDQUFFQyxLQUFLLElBQUtBLEtBQUssQ0FBQ04sUUFBUSxLQUFLSSxVQUFVLElBQUlFLEtBQUssQ0FBQ1QsV0FBVyxLQUFLQSxXQUFXLENBQUM7TUFDMUcsQ0FBQyxNQUFNO1FBQ04sT0FBTyxJQUFJLENBQUNOLE9BQU8sQ0FBQ2MsTUFBTSxDQUFFQyxLQUFLLElBQUtBLEtBQUssQ0FBQ04sUUFBUSxLQUFLSSxVQUFVLENBQUM7TUFDckU7SUFDRCxDQUFDO0lBQUEsT0FFRE4sa0JBQWtCLEdBQWxCLDRCQUNDTSxVQUF5QixFQUN6QkgsUUFBdUIsRUFDdkJOLE9BQWUsRUFDZkMsaUJBQXVCLEVBQ3ZCVyxnQkFBeUIsRUFDZjtNQUNWLElBQUlYLGlCQUFpQixJQUFJQSxpQkFBaUIsQ0FBQ1EsVUFBVSxDQUFDLElBQUlHLGdCQUFnQixFQUFFO1FBQzNFLE9BQU8sSUFBSSxDQUFDaEIsT0FBTyxDQUFDaUIsSUFBSSxDQUN0QkYsS0FBSyxJQUNMQSxLQUFLLENBQUNOLFFBQVEsS0FBS0ksVUFBVSxJQUM3QkUsS0FBSyxDQUFDTCxRQUFRLEtBQUtBLFFBQVEsSUFDM0JLLEtBQUssQ0FBQ1gsT0FBTyxDQUFDYyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLZCxPQUFPLENBQUNjLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLElBQy9ESCxLQUFLLENBQUNULFdBQVcsS0FBS1UsZ0JBQWdCLENBQ3ZDO01BQ0Y7TUFDQSxPQUFPLElBQUksQ0FBQ2hCLE9BQU8sQ0FBQ2lCLElBQUksQ0FDdEJGLEtBQUssSUFDTEEsS0FBSyxDQUFDTixRQUFRLEtBQUtJLFVBQVUsSUFDN0JFLEtBQUssQ0FBQ0wsUUFBUSxLQUFLQSxRQUFRLElBQzNCSyxLQUFLLENBQUNYLE9BQU8sQ0FBQ2MsT0FBTyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBS2QsT0FBTyxDQUFDYyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUNoRTtJQUNGLENBQUM7SUFBQTtFQUFBO0VBQUEsT0FHYW5CLFdBQVc7QUFBQSJ9