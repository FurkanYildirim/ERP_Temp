/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["../../helpers/StableIdHelper"], function (StableIdHelper) {
  "use strict";

  var _exports = {};
  var generate = StableIdHelper.generate;
  const BASE_ID = ["fe"];

  /**
   * Shortcut to the stableIdHelper providing a "curry" like method where the last parameter is missing.
   *
   * @param sFixedPart
   * @returns A shortcut function with the fixed ID part
   */
  function createIDGenerator() {
    for (var _len = arguments.length, sFixedPart = new Array(_len), _key = 0; _key < _len; _key++) {
      sFixedPart[_key] = arguments[_key];
    }
    return function () {
      for (var _len2 = arguments.length, sIDPart = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        sIDPart[_key2] = arguments[_key2];
      }
      return generate(BASE_ID.concat(...sFixedPart, ...sIDPart));
    };
  }

  /**
   * Those are all helpers to centralize ID generation in the code for different elements
   */
  _exports.createIDGenerator = createIDGenerator;
  const getHeaderFacetID = createIDGenerator("HeaderFacet");
  _exports.getHeaderFacetID = getHeaderFacetID;
  const getHeaderFacetContainerID = createIDGenerator("HeaderFacetContainer");
  _exports.getHeaderFacetContainerID = getHeaderFacetContainerID;
  const getHeaderFacetFormID = createIDGenerator("HeaderFacet", "Form");
  _exports.getHeaderFacetFormID = getHeaderFacetFormID;
  const getCustomHeaderFacetID = createIDGenerator("HeaderFacetCustomContainer");
  _exports.getCustomHeaderFacetID = getCustomHeaderFacetID;
  const getEditableHeaderSectionID = createIDGenerator("EditableHeaderSection");
  _exports.getEditableHeaderSectionID = getEditableHeaderSectionID;
  const getSectionID = createIDGenerator("FacetSection");
  _exports.getSectionID = getSectionID;
  const getCustomSectionID = createIDGenerator("CustomSection");
  _exports.getCustomSectionID = getCustomSectionID;
  const getSubSectionID = createIDGenerator("FacetSubSection");
  _exports.getSubSectionID = getSubSectionID;
  const getCustomSubSectionID = createIDGenerator("CustomSubSection");
  _exports.getCustomSubSectionID = getCustomSubSectionID;
  const getSideContentID = createIDGenerator("SideContent");
  _exports.getSideContentID = getSideContentID;
  const getSideContentLayoutID = function (sSectionID) {
    return generate(["fe", sSectionID, "SideContentLayout"]);
  };
  _exports.getSideContentLayoutID = getSideContentLayoutID;
  const getFormID = createIDGenerator("Form");
  _exports.getFormID = getFormID;
  const getFormContainerID = createIDGenerator("FormContainer");
  _exports.getFormContainerID = getFormContainerID;
  const getFormStandardActionButtonID = function (sFormContainerId, sActionName) {
    return generate(["fe", "FormContainer", sFormContainerId, "StandardAction", sActionName]);
  };
  _exports.getFormStandardActionButtonID = getFormStandardActionButtonID;
  const getTableID = createIDGenerator("table");
  _exports.getTableID = getTableID;
  const getCustomTabID = createIDGenerator("CustomTab");
  _exports.getCustomTabID = getCustomTabID;
  const getFilterBarID = createIDGenerator("FilterBar");
  _exports.getFilterBarID = getFilterBarID;
  const getDynamicListReportID = function () {
    return "fe::ListReport";
  };
  _exports.getDynamicListReportID = getDynamicListReportID;
  const getIconTabBarID = createIDGenerator("TabMultipleMode");
  _exports.getIconTabBarID = getIconTabBarID;
  const getFilterVariantManagementID = function (sFilterID) {
    return generate([sFilterID, "VariantManagement"]);
  };
  _exports.getFilterVariantManagementID = getFilterVariantManagementID;
  const getChartID = createIDGenerator("Chart");
  _exports.getChartID = getChartID;
  const getCustomActionID = function (sActionID) {
    return generate(["CustomAction", sActionID]);
  };
  _exports.getCustomActionID = getCustomActionID;
  const getKPIID = createIDGenerator("KPI");
  _exports.getKPIID = getKPIID;
  return _exports;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCQVNFX0lEIiwiY3JlYXRlSURHZW5lcmF0b3IiLCJzRml4ZWRQYXJ0Iiwic0lEUGFydCIsImdlbmVyYXRlIiwiY29uY2F0IiwiZ2V0SGVhZGVyRmFjZXRJRCIsImdldEhlYWRlckZhY2V0Q29udGFpbmVySUQiLCJnZXRIZWFkZXJGYWNldEZvcm1JRCIsImdldEN1c3RvbUhlYWRlckZhY2V0SUQiLCJnZXRFZGl0YWJsZUhlYWRlclNlY3Rpb25JRCIsImdldFNlY3Rpb25JRCIsImdldEN1c3RvbVNlY3Rpb25JRCIsImdldFN1YlNlY3Rpb25JRCIsImdldEN1c3RvbVN1YlNlY3Rpb25JRCIsImdldFNpZGVDb250ZW50SUQiLCJnZXRTaWRlQ29udGVudExheW91dElEIiwic1NlY3Rpb25JRCIsImdldEZvcm1JRCIsImdldEZvcm1Db250YWluZXJJRCIsImdldEZvcm1TdGFuZGFyZEFjdGlvbkJ1dHRvbklEIiwic0Zvcm1Db250YWluZXJJZCIsInNBY3Rpb25OYW1lIiwiZ2V0VGFibGVJRCIsImdldEN1c3RvbVRhYklEIiwiZ2V0RmlsdGVyQmFySUQiLCJnZXREeW5hbWljTGlzdFJlcG9ydElEIiwiZ2V0SWNvblRhYkJhcklEIiwiZ2V0RmlsdGVyVmFyaWFudE1hbmFnZW1lbnRJRCIsInNGaWx0ZXJJRCIsImdldENoYXJ0SUQiLCJnZXRDdXN0b21BY3Rpb25JRCIsInNBY3Rpb25JRCIsImdldEtQSUlEIl0sInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyJJRC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEF1dGhvcml6ZWRJZEFubm90YXRpb25zVHlwZSB9IGZyb20gXCIuLi8uLi9oZWxwZXJzL1N0YWJsZUlkSGVscGVyXCI7XG5pbXBvcnQgeyBnZW5lcmF0ZSB9IGZyb20gXCIuLi8uLi9oZWxwZXJzL1N0YWJsZUlkSGVscGVyXCI7XG50eXBlIElEUGFydCA9IHN0cmluZyB8IEF1dGhvcml6ZWRJZEFubm90YXRpb25zVHlwZTtcbmNvbnN0IEJBU0VfSUQ6IElEUGFydFtdID0gW1wiZmVcIl07XG5cbi8qKlxuICogU2hvcnRjdXQgdG8gdGhlIHN0YWJsZUlkSGVscGVyIHByb3ZpZGluZyBhIFwiY3VycnlcIiBsaWtlIG1ldGhvZCB3aGVyZSB0aGUgbGFzdCBwYXJhbWV0ZXIgaXMgbWlzc2luZy5cbiAqXG4gKiBAcGFyYW0gc0ZpeGVkUGFydFxuICogQHJldHVybnMgQSBzaG9ydGN1dCBmdW5jdGlvbiB3aXRoIHRoZSBmaXhlZCBJRCBwYXJ0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJREdlbmVyYXRvciguLi5zRml4ZWRQYXJ0OiBJRFBhcnRbXSkge1xuXHRyZXR1cm4gZnVuY3Rpb24gKC4uLnNJRFBhcnQ6IElEUGFydFtdKSB7XG5cdFx0cmV0dXJuIGdlbmVyYXRlKEJBU0VfSUQuY29uY2F0KC4uLnNGaXhlZFBhcnQsIC4uLnNJRFBhcnQpKTtcblx0fTtcbn1cblxuLyoqXG4gKiBUaG9zZSBhcmUgYWxsIGhlbHBlcnMgdG8gY2VudHJhbGl6ZSBJRCBnZW5lcmF0aW9uIGluIHRoZSBjb2RlIGZvciBkaWZmZXJlbnQgZWxlbWVudHNcbiAqL1xuZXhwb3J0IGNvbnN0IGdldEhlYWRlckZhY2V0SUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkhlYWRlckZhY2V0XCIpO1xuZXhwb3J0IGNvbnN0IGdldEhlYWRlckZhY2V0Q29udGFpbmVySUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkhlYWRlckZhY2V0Q29udGFpbmVyXCIpO1xuZXhwb3J0IGNvbnN0IGdldEhlYWRlckZhY2V0Rm9ybUlEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJIZWFkZXJGYWNldFwiLCBcIkZvcm1cIik7XG5leHBvcnQgY29uc3QgZ2V0Q3VzdG9tSGVhZGVyRmFjZXRJRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiSGVhZGVyRmFjZXRDdXN0b21Db250YWluZXJcIik7XG5leHBvcnQgY29uc3QgZ2V0RWRpdGFibGVIZWFkZXJTZWN0aW9uSUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkVkaXRhYmxlSGVhZGVyU2VjdGlvblwiKTtcbmV4cG9ydCBjb25zdCBnZXRTZWN0aW9uSUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkZhY2V0U2VjdGlvblwiKTtcbmV4cG9ydCBjb25zdCBnZXRDdXN0b21TZWN0aW9uSUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkN1c3RvbVNlY3Rpb25cIik7XG5leHBvcnQgY29uc3QgZ2V0U3ViU2VjdGlvbklEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJGYWNldFN1YlNlY3Rpb25cIik7XG5leHBvcnQgY29uc3QgZ2V0Q3VzdG9tU3ViU2VjdGlvbklEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJDdXN0b21TdWJTZWN0aW9uXCIpO1xuZXhwb3J0IGNvbnN0IGdldFNpZGVDb250ZW50SUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIlNpZGVDb250ZW50XCIpO1xuZXhwb3J0IGNvbnN0IGdldFNpZGVDb250ZW50TGF5b3V0SUQgPSBmdW5jdGlvbiAoc1NlY3Rpb25JRDogc3RyaW5nKSB7XG5cdHJldHVybiBnZW5lcmF0ZShbXCJmZVwiLCBzU2VjdGlvbklELCBcIlNpZGVDb250ZW50TGF5b3V0XCJdKTtcbn07XG5leHBvcnQgY29uc3QgZ2V0Rm9ybUlEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJGb3JtXCIpO1xuZXhwb3J0IGNvbnN0IGdldEZvcm1Db250YWluZXJJRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiRm9ybUNvbnRhaW5lclwiKTtcbmV4cG9ydCBjb25zdCBnZXRGb3JtU3RhbmRhcmRBY3Rpb25CdXR0b25JRCA9IGZ1bmN0aW9uIChzRm9ybUNvbnRhaW5lcklkOiBzdHJpbmcsIHNBY3Rpb25OYW1lOiBzdHJpbmcpIHtcblx0cmV0dXJuIGdlbmVyYXRlKFtcImZlXCIsIFwiRm9ybUNvbnRhaW5lclwiLCBzRm9ybUNvbnRhaW5lcklkLCBcIlN0YW5kYXJkQWN0aW9uXCIsIHNBY3Rpb25OYW1lXSk7XG59O1xuZXhwb3J0IGNvbnN0IGdldFRhYmxlSUQgPSBjcmVhdGVJREdlbmVyYXRvcihcInRhYmxlXCIpO1xuZXhwb3J0IGNvbnN0IGdldEN1c3RvbVRhYklEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJDdXN0b21UYWJcIik7XG5leHBvcnQgY29uc3QgZ2V0RmlsdGVyQmFySUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkZpbHRlckJhclwiKTtcbmV4cG9ydCBjb25zdCBnZXREeW5hbWljTGlzdFJlcG9ydElEID0gZnVuY3Rpb24gKCkge1xuXHRyZXR1cm4gXCJmZTo6TGlzdFJlcG9ydFwiO1xufTtcbmV4cG9ydCBjb25zdCBnZXRJY29uVGFiQmFySUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIlRhYk11bHRpcGxlTW9kZVwiKTtcbmV4cG9ydCBjb25zdCBnZXRGaWx0ZXJWYXJpYW50TWFuYWdlbWVudElEID0gZnVuY3Rpb24gKHNGaWx0ZXJJRDogc3RyaW5nKSB7XG5cdHJldHVybiBnZW5lcmF0ZShbc0ZpbHRlcklELCBcIlZhcmlhbnRNYW5hZ2VtZW50XCJdKTtcbn07XG5leHBvcnQgY29uc3QgZ2V0Q2hhcnRJRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiQ2hhcnRcIik7XG5leHBvcnQgY29uc3QgZ2V0Q3VzdG9tQWN0aW9uSUQgPSBmdW5jdGlvbiAoc0FjdGlvbklEOiBzdHJpbmcpIHtcblx0cmV0dXJuIGdlbmVyYXRlKFtcIkN1c3RvbUFjdGlvblwiLCBzQWN0aW9uSURdKTtcbn07XG5leHBvcnQgY29uc3QgZ2V0S1BJSUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIktQSVwiKTtcbiJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQUE7QUFBQTs7Ozs7O0VBR0EsTUFBTUEsT0FBaUIsR0FBRyxDQUFDLElBQUksQ0FBQzs7RUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ08sU0FBU0MsaUJBQWlCLEdBQTBCO0lBQUEsa0NBQXRCQyxVQUFVO01BQVZBLFVBQVU7SUFBQTtJQUM5QyxPQUFPLFlBQWdDO01BQUEsbUNBQW5CQyxPQUFPO1FBQVBBLE9BQU87TUFBQTtNQUMxQixP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