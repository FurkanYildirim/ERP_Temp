/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["sap/base/util/merge", "sap/fe/core/helpers/BindingToolkit", "sap/ui/mdc/enum/BaseType", "sap/ui/mdc/odata/v4/TypeUtil"], function (merge, BindingToolkit, BaseType, ODataTypeUtil) {
  "use strict";

  var EDM_TYPE_MAPPING = BindingToolkit.EDM_TYPE_MAPPING;
  const ODataV4TypeUtil = Object.assign({}, ODataTypeUtil);
  ODataV4TypeUtil.getBaseType = function (type, formatOptions, constraints) {
    switch (type) {
      case "sap.ui.model.odata.type.Date":
        return BaseType.Date;
      case "sap.ui.model.odata.type.TimeOfDay":
        return BaseType.Time;
      case "sap.ui.model.odata.type.Unit":
      case "sap.ui.model.odata.type.Currency":
        if (!formatOptions || (!formatOptions.hasOwnProperty("showMeasure") || formatOptions.showMeasure) && (!formatOptions.hasOwnProperty("showNumber") || formatOptions.showNumber)) {
          return BaseType.Unit;
        } else if (!formatOptions.hasOwnProperty("showNumber") || formatOptions.showNumber) {
          return BaseType.Numeric; // only number to show
        } else {
          return BaseType.String; // only unit to show
        }

      default:
        return ODataTypeUtil.getBaseType.call(ODataV4TypeUtil, type, formatOptions, constraints);
    }
  };
  ODataV4TypeUtil.getDataTypeClassName = function (type) {
    // V4 specific types
    if (EDM_TYPE_MAPPING[type]) {
      type = EDM_TYPE_MAPPING[type].type;
    } else {
      type = ODataTypeUtil.getDataTypeClassName.call(ODataV4TypeUtil, type);
    }
    return type;
  };
  ODataV4TypeUtil.getDataTypeInstance = function (dataType, formatOptions, constraints) {
    switch (dataType) {
      case "sap.ui.model.odata.type.DateTimeOffset":
      case "Edm.DateTimeOffset":
        constraints = merge({}, constraints || {});
        constraints.V4 = true;
        break;
      default:
    }
    const TypeClass = ODataV4TypeUtil.getDataTypeClass(dataType);
    return new TypeClass(formatOptions, constraints);
  };
  return ODataV4TypeUtil;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPRGF0YVY0VHlwZVV0aWwiLCJPYmplY3QiLCJhc3NpZ24iLCJPRGF0YVR5cGVVdGlsIiwiZ2V0QmFzZVR5cGUiLCJ0eXBlIiwiZm9ybWF0T3B0aW9ucyIsImNvbnN0cmFpbnRzIiwiQmFzZVR5cGUiLCJEYXRlIiwiVGltZSIsImhhc093blByb3BlcnR5Iiwic2hvd01lYXN1cmUiLCJzaG93TnVtYmVyIiwiVW5pdCIsIk51bWVyaWMiLCJTdHJpbmciLCJjYWxsIiwiZ2V0RGF0YVR5cGVDbGFzc05hbWUiLCJFRE1fVFlQRV9NQVBQSU5HIiwiZ2V0RGF0YVR5cGVJbnN0YW5jZSIsImRhdGFUeXBlIiwibWVyZ2UiLCJWNCIsIlR5cGVDbGFzcyIsImdldERhdGFUeXBlQ2xhc3MiXSwic291cmNlUm9vdCI6Ii4iLCJzb3VyY2VzIjpbIlR5cGVVdGlsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtZXJnZSBmcm9tIFwic2FwL2Jhc2UvdXRpbC9tZXJnZVwiO1xuaW1wb3J0IHsgRURNX1RZUEVfTUFQUElORyB9IGZyb20gXCJzYXAvZmUvY29yZS9oZWxwZXJzL0JpbmRpbmdUb29sa2l0XCI7XG5pbXBvcnQgQmFzZVR5cGUgZnJvbSBcInNhcC91aS9tZGMvZW51bS9CYXNlVHlwZVwiO1xuaW1wb3J0IHR5cGUgeyBDb25zdHJhaW50cywgRm9ybWF0T3B0aW9ucyB9IGZyb20gXCJzYXAvdWkvbWRjL29kYXRhL1R5cGVVdGlsXCI7XG5pbXBvcnQgT0RhdGFUeXBlVXRpbCBmcm9tIFwic2FwL3VpL21kYy9vZGF0YS92NC9UeXBlVXRpbFwiO1xuaW1wb3J0IHR5cGUgU2ltcGxlVHlwZSBmcm9tIFwic2FwL3VpL21vZGVsL1NpbXBsZVR5cGVcIjtcblxuY29uc3QgT0RhdGFWNFR5cGVVdGlsID0gT2JqZWN0LmFzc2lnbih7fSwgT0RhdGFUeXBlVXRpbCk7XG5PRGF0YVY0VHlwZVV0aWwuZ2V0QmFzZVR5cGUgPSBmdW5jdGlvbiAodHlwZTogc3RyaW5nLCBmb3JtYXRPcHRpb25zPzogRm9ybWF0T3B0aW9ucywgY29uc3RyYWludHM/OiBDb25zdHJhaW50cyk6IEJhc2VUeXBlIHtcblx0c3dpdGNoICh0eXBlKSB7XG5cdFx0Y2FzZSBcInNhcC51aS5tb2RlbC5vZGF0YS50eXBlLkRhdGVcIjpcblx0XHRcdHJldHVybiBCYXNlVHlwZS5EYXRlO1xuXHRcdGNhc2UgXCJzYXAudWkubW9kZWwub2RhdGEudHlwZS5UaW1lT2ZEYXlcIjpcblx0XHRcdHJldHVybiBCYXNlVHlwZS5UaW1lO1xuXHRcdGNhc2UgXCJzYXAudWkubW9kZWwub2RhdGEudHlwZS5Vbml0XCI6XG5cdFx0Y2FzZSBcInNhcC51aS5tb2RlbC5vZGF0YS50eXBlLkN1cnJlbmN5XCI6XG5cdFx0XHRpZiAoXG5cdFx0XHRcdCFmb3JtYXRPcHRpb25zIHx8XG5cdFx0XHRcdCgoIWZvcm1hdE9wdGlvbnMuaGFzT3duUHJvcGVydHkoXCJzaG93TWVhc3VyZVwiKSB8fCBmb3JtYXRPcHRpb25zLnNob3dNZWFzdXJlKSAmJlxuXHRcdFx0XHRcdCghZm9ybWF0T3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShcInNob3dOdW1iZXJcIikgfHwgZm9ybWF0T3B0aW9ucy5zaG93TnVtYmVyKSlcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm4gQmFzZVR5cGUuVW5pdDtcblx0XHRcdH0gZWxzZSBpZiAoIWZvcm1hdE9wdGlvbnMuaGFzT3duUHJvcGVydHkoXCJzaG93TnVtYmVyXCIpIHx8IGZvcm1hdE9wdGlvbnMuc2hvd051bWJlcikge1xuXHRcdFx0XHRyZXR1cm4gQmFzZVR5cGUuTnVtZXJpYzsgLy8gb25seSBudW1iZXIgdG8gc2hvd1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIEJhc2VUeXBlLlN0cmluZzsgLy8gb25seSB1bml0IHRvIHNob3dcblx0XHRcdH1cblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIE9EYXRhVHlwZVV0aWwuZ2V0QmFzZVR5cGUuY2FsbChPRGF0YVY0VHlwZVV0aWwsIHR5cGUsIGZvcm1hdE9wdGlvbnMsIGNvbnN0cmFpbnRzKTtcblx0fVxufTtcbk9EYXRhVjRUeXBlVXRpbC5nZXREYXRhVHlwZUNsYXNzTmFtZSA9IGZ1bmN0aW9uICh0eXBlOiBzdHJpbmcpOiBzdHJpbmcge1xuXHQvLyBWNCBzcGVjaWZpYyB0eXBlc1xuXHRpZiAoRURNX1RZUEVfTUFQUElOR1t0eXBlXSkge1xuXHRcdHR5cGUgPSBFRE1fVFlQRV9NQVBQSU5HW3R5cGVdLnR5cGU7XG5cdH0gZWxzZSB7XG5cdFx0dHlwZSA9IE9EYXRhVHlwZVV0aWwuZ2V0RGF0YVR5cGVDbGFzc05hbWUuY2FsbChPRGF0YVY0VHlwZVV0aWwsIHR5cGUpO1xuXHR9XG5cdHJldHVybiB0eXBlO1xufTtcbk9EYXRhVjRUeXBlVXRpbC5nZXREYXRhVHlwZUluc3RhbmNlID0gZnVuY3Rpb24gKGRhdGFUeXBlOiBzdHJpbmcsIGZvcm1hdE9wdGlvbnM/OiBGb3JtYXRPcHRpb25zLCBjb25zdHJhaW50cz86IENvbnN0cmFpbnRzKTogU2ltcGxlVHlwZSB7XG5cdHN3aXRjaCAoZGF0YVR5cGUpIHtcblx0XHRjYXNlIFwic2FwLnVpLm1vZGVsLm9kYXRhLnR5cGUuRGF0ZVRpbWVPZmZzZXRcIjpcblx0XHRjYXNlIFwiRWRtLkRhdGVUaW1lT2Zmc2V0XCI6XG5cdFx0XHRjb25zdHJhaW50cyA9IG1lcmdlKHt9LCBjb25zdHJhaW50cyB8fCB7fSk7XG5cdFx0XHRjb25zdHJhaW50cy5WNCA9IHRydWU7XG5cdFx0XHRicmVhaztcblx0XHRkZWZhdWx0OlxuXHR9XG5cdGNvbnN0IFR5cGVDbGFzcyA9IE9EYXRhVjRUeXBlVXRpbC5nZXREYXRhVHlwZUNsYXNzKGRhdGFUeXBlKTtcblx0cmV0dXJuIG5ldyBUeXBlQ2xhc3MoZm9ybWF0T3B0aW9ucywgY29uc3RyYWludHMpO1xufTtcbmV4cG9ydCBkZWZhdWx0IE9EYXRhVjRUeXBlVXRpbDtcbiJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQUE7QUFBQTs7Ozs7RUFPQSxNQUFNQSxlQUFlLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFQyxhQUFhLENBQUM7RUFDeERILGVBQWUsQ0FBQ0ksV0FBVyxHQUFHLFVBQVVDLElBQVksRUFBRUMsYUFBNkIsRUFBRUMsV0FBeUIsRUFBWTtJQUN6SCxRQUFRRixJQUFJO01BQ1gsS0FBSyw4QkFBOEI7UUFDbEMsT0FBT0csUUFBUSxDQUFDQyxJQUFJO01BQ3JCLEtBQUssbUNBQW1DO1FBQ3ZDLE9BQU9ELFFBQVEsQ0FBQ0UsSUFBSTtNQUNyQixLQUFLLDhCQUE4QjtNQUNuQyxLQUFLLGtDQUFrQztRQUN0QyxJQUNDLENBQUNKLGFBQWEsSUFDYixDQUFDLENBQUNBLGFBQWEsQ0FBQ0ssY0FBYyxDQUFDLGFBQWEsQ0FBQyxJQUFJTCxhQUFhLENBQUNNLFdBQVcsTUFDekUsQ0FBQ04sYUFBYSxDQUFDSyxjQUFjLENBQUMsWUFBWSxDQUFDLElBQUlMLGFBQWEsQ0FBQ08sVUFBVSxDQUFFLEVBQzFFO1VBQ0QsT0FBT0wsUUFBUSxDQUFDTSxJQUFJO1FBQ3JCLENBQUMsTUFBTSxJQUFJLENBQUNSLGFBQWEsQ0FBQ0ssY0FBYyxDQUFDLFlBQVksQ0FBQyxJQUFJTCxhQUFhLENBQUNPLFVBQVUsRUFBRTtVQUNuRixPQUFPTCxRQUFRLENBQUNPLE9BQU8sQ0FBQyxDQUFDO1FBQzFCLENBQUMsTUFBTTtVQUNOLE9BQU9QLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDLENBQUM7UUFDekI7O01BQ0Q7UUFDQyxPQUFPYixhQUFhLENBQUNDLFdBQVcsQ0FBQ2EsSUFBSSxDQUFDakIsZUFBZSxFQUFFSyxJQUFJLEVBQUVDLGFBQWEsRUFBRUMsV0FBVyxDQUFDO0lBQUM7RUFFNUYsQ0FBQztFQUNEUCxlQUFlLENBQUNrQixvQkFBb0IsR0FBRyxVQUFVYixJQUFZLEVBQVU7SUFDdEU7SUFDQSxJQUFJYyxnQkFBZ0IsQ0FBQ2QsSUFBSSxDQUFDLEVBQUU7TUFDM0JBLElBQUksR0FBR2MsZ0JBQWdCLENBQUNkLElBQUksQ0FBQyxDQUFDQSxJQUFJO0lBQ25DLENBQUMsTUFBTTtNQUNOQSxJQUFJLEdBQUdGLGFBQWEsQ0FBQ2Usb0JBQW9CLENBQUNELElBQUksQ0FBQ2pCLGVBQWUsRUFBRUssSUFBSSxDQUFDO0lBQ3RFO0lBQ0EsT0FBT0EsSUFBSTtFQUNaLENBQUM7RUFDREwsZUFBZSxDQUFDb0IsbUJBQW1CLEdBQUcsVUFBVUMsUUFBZ0IsRUFBRWYsYUFBNkIsRUFBRUMsV0FBeUIsRUFBYztJQUN2SSxRQUFRYyxRQUFRO01BQ2YsS0FBSyx3Q0FBd0M7TUFDN0MsS0FBSyxvQkFBb0I7UUFDeEJkLFdBQVcsR0FBR2UsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFZixXQUFXLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDMUNBLFdBQVcsQ0FBQ2dCLEVBQUUsR0FBRyxJQUFJO1FBQ3JCO01BQ0Q7SUFBUTtJQUVULE1BQU1DLFNBQVMsR0FBR3hCLGVBQWUsQ0FBQ3lCLGdCQUFnQixDQUFDSixRQUFRLENBQUM7SUFDNUQsT0FBTyxJQUFJRyxTQUFTLENBQUNsQixhQUFhLEVBQUVDLFdBQVcsQ0FBQztFQUNqRCxDQUFDO0VBQUMsT0FDYVAsZUFBZTtBQUFBIn0=