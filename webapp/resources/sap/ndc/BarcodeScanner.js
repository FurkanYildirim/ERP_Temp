/*!
 * SAPUI5
 * (c) Copyright 2009-2023 SAP SE. All rights reserved.
 */
sap.ui.loader.config({shim:{"sap/ndc/thirdparty/ZXing":{amd:true,exports:"ZXing"},"sap/ndc/thirdparty/zxingcpp/zxing_reader":{amd:true,exports:"ZXing"},"sap/ndc/thirdparty/opencv/opencv_js":{amd:true,exports:"cv"}}});sap.ui.define(["sap/base/Log","sap/ui/model/json/JSONModel","sap/ui/model/BindingMode","sap/ui/model/resource/ResourceModel","sap/m/Input","sap/m/Label","sap/m/Button","sap/m/Dialog","sap/m/FlexBox","sap/m/BusyDialog","sap/ui/dom/includeStylesheet","./BarcodeScannerUIContainer","sap/m/MessageToast","sap/m/library","sap/ui/base/Event","sap/ui/base/EventProvider","sap/ui/Device","sap/ui/thirdparty/jquery","sap/base/util/deepClone","sap/m/Avatar","sap/ui/core/CustomData","sap/m/_thirdparty/purify"],function(e,a,t,n,r,i,o,s,c,l,d,u,f,g,p,h,P,jQuery,y,v,m,S){"use strict";document.addEventListener("settingsDone",ve);document.addEventListener("SettingCompleted",ve);document.addEventListener("mockSettingsDone",ve);d({url:sap.ui.require.toUrl("sap/ndc/css/sapNdcBarcodeScanner.css")});var b={},B,C,D,w,I,E,A,Z,T,x={Initial:"Initial",Loading:"Loading",Available:"Available",UnAvailable:"UnAvailable"},k=new a({scannerAPI:"unknown",available:false,config:{defaultConstraints:{audio:false,video:{facingMode:"environment"}},deviceId:undefined,preferFrontCamera:false,zoom:null,enableGS1Header:false},scanDialog:{title:"",onLiveUpdate:null,videoScaleX:1,videoScaleY:1,originOrientation:"portrait",barcodeOverlaySetup:false,isNoScanner:false,scanningStartTime:0,keepCameraScan:false,isDecodePaused:false},busyDialog:null,callBackHandler:{onFnFail:null,onFnSuccess:null,callBackFromSetPhysicalScan:false,fnBluetoothScan:null},devices:{mainCamera:undefined,needCheck:true,all:[],front:[],back:[]},apis:{ZebraEnterpriseBrowser:{key:"ZebraEnterpriseBrowser",description:"Zebra Enterprise Browser",status:x.Initial,enableBarcodeState:"init",enableZebraBarcodeRetryCount:6},Cordova:{key:"Cordova",description:"Cordova",status:x.Initial,scannerAPI:null},ZXingCPP:{key:"ZXingCPP",description:"WebAssembly build (using Emcripten) of zxing-cpp",status:x.Initial,instance:null,scannerAPI:null,openCV:{instance:null,scannerAPI:null},multiScan:{enabled:false,maxBarcodeNumber:10,showPauseButton:false,pauseIfHasResult:false,stopIfOnlyHasOneResult:false}},ZXing:{key:"ZXing",description:"ZXing",status:x.Initial,instance:null,scannerAPI:null},BluetoothScanner:{key:"BluetoothScanner",description:"Bluetooth Barcode Scanner",status:x.UnAvailable,resultBuffer:[],resultMinLength:2,scanningKeyMaxLength:1,scanningLastKey:null,triggerOneTime:false,timeOutForDetection:null,handleFocusedElement:false,focusedElementInstance:"",focusedElementValue:"",focusedElementSelectionStart:null,focusedElementSelectionEnd:null,focusedCurrentWindow:false,scanningMode:"TimeInterval",intervalForDetection:80,maxPrefixSuffixScanningTime:5e3,prefix:"$",suffix:"#",prefixFound:false,suffixFound:false,prefixString:"",suffixString:"",prefixStartDate:null,replaceGS1Separator:false,replaceCharacterBuffer:"",GS1FunctionKey:"altKey",GS1Code:undefined,GS1ReplacementCharacter:undefined}},bReady:true}),F=new a({scannerAPI:"unknown",available:false,deviceId:undefined,devices:[],apis:{ZebraEnterpriseBrowser:{key:"ZebraEnterpriseBrowser",status:x.Initial},Cordova:{key:"Cordova",status:x.Initial},ZXingCPP:{key:"ZXingCPP",status:x.Initial,multiScan:{enabled:false,maxBarcodeNumber:10,showPauseButton:false,pauseIfHasResult:false,stopIfOnlyHasOneResult:false}},ZXing:{key:"ZXing",status:x.Initial},BluetoothScanner:{key:"BluetoothScanner",status:x.UnAvailable}}}).setDefaultBindingMode(t.OneWay),X=new n({bundleName:"sap.ndc.messagebundle"});function O(e){return k.getProperty("/apis/"+e+"/")}function L(e){return k.getProperty("/apis/"+e+"/status")}function R(a,t,n){if(!a||!O(a)){e.error("BarcodeScanner.updateScannerAPI: scanner API '"+a+"' is not a valid status code, stop update scanner API. Please check!");return}var r="/apis/"+a+"/";if(t){if(x[t]){k.setProperty(r+"status",t);F.setProperty(r+"status",t)}else{e.error("BarcodeScanner.updateScannerAPI: scanner API status '"+t+"' is not a valid status code, please check!")}}if(typeof n==="boolean"&&n&&a!=="BluetoothScanner"){k.setProperty("/scannerAPI",a);F.setProperty("/scannerAPI",a)}k.checkUpdate(true);F.checkUpdate(true)}function _(e,a){R(e,x.Available,a)}function M(a,t){k.setProperty("/apis/"+a+"/instance",null);k.setProperty("/apis/"+a+"/scannerAPI",null);if(a==="ZXingCPP"){k.setProperty("/apis/ZXingCPP/openCV/instance",null);k.setProperty("/apis/ZXingCPP/openCV/scannerAPI",null)}else if(a==="BluetoothScanner"){k.setProperty("/callBackHandler/fnBluetoothScan",null)}R(a,x.UnAvailable);if(t){e.debug("Update the related data when API is set to unavailable");var n=k.getProperty("/apis");var r="unknown";for(var i in n){if(n[i].status===x.Available||n[i].status===x.Initial){r=i;break}}_(r,true)}}function N(){return k.getProperty("/scannerAPI")}function H(e){if(e==="unknown"){k.setProperty("/scannerAPI",e);F.setProperty("/scannerAPI",e)}else{R(e,undefined,true)}}function U(a,t){if(!a||!O(a)){e.error("BarcodeScanner.checkScannerAPIStatus: scanner API '"+a+"' doesn't exist. Please check!");return false}var n=k.getProperty("/apis/"+a+"/status");return t===n}function G(e){return U(e,x.Available)}function W(e){return U(e,x.UnAvailable)}function z(){k.setProperty("/available",false);F.setProperty("/available",false);M("ZXing");M("ZXingCPP");e.debug("BarcodeScanner.disableFeatureAPIs: Set status of Feature scanner APIs (ZXing, ZXingCPP) to unavailable!")}function V(){try{var a=cordova.plugins.barcodeScanner;if(a){k.setProperty("/apis/Cordova/scannerAPI",a);_("Cordova");if(N()==="unknown"){H("Cordova")}e.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is available!");z()}else{e.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is unavailable!");M("Cordova");K()}}catch(a){e.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is unavailable!");M("Cordova");K()}}function K(){jQuery(document).ready(function(){if(ae()){te()}});q()}function j(a,t){R("ZXing",x.Loading);sap.ui.require(["sap/ndc/thirdparty/ZXing"],function(n){var r=n;if(r){k.setProperty("/apis/ZXing/instance",n);var i=new r.BrowserMultiFormatReader;if(i){k.setProperty("/apis/ZXing/scannerAPI",i);_("ZXing");e.debug("BarcodeScanner.loadZXingAPI: ZXing BrowserMultiFormatReader API is available!");a()}else{M("ZXing");e.error("BarcodeScanner.loadZXingAPI: ZXing BrowserMultiFormatReader API is unavailable");t()}}else{M("ZXing");e.error("BarcodeScanner.loadZXingAPI: ZXing API is unavailable");t()}},function(a){M("ZXing");e.error("BarcodeScanner.loadZXingAPI: ZXing API is unavailable.\n"+a);t()})}function Y(a){e.error(a);M("ZXingCPP");var t=L("ZXing");if(t===x.UnAvailable){e.warning("BarcodeScanner.loadZXingCPPFailed: ZXing is unavailable too, no feature scanner API available now.");k.setProperty("/available",false);F.setProperty("/available",false)}else if(N()!=="ZebraEnterpriseBrowser"){e.debug("BarcodeScanner.loadZXingCPPFailed: Zebra is not current scanner API, ZXing if NOT UnAvailable, so set ZXing as current scanner API.");H("ZXing")}k.checkUpdate(true)}function q(){e.info("BarcodeScanner.loadZXingCPPAPI: load ZXingCPP API");R("ZXingCPP",x.Loading);sap.ui.require(["sap/ndc/thirdparty/zxingcpp/zxing_reader","sap/ndc/thirdparty/opencv/opencv_js"],function(a,t){k.setProperty("/apis/ZXingCPP/instance",a);k.setProperty("/apis/ZXingCPP/openCV/instance",t);if(N()==="unknown"){H("ZXingCPP")}e.debug("BarcodeScanner.loadZXingCPPAPI: ZXingCPP API is Initial!");R("ZXingCPP",x.Initial)},function(e){Y("BarcodeScanner.loadZXingCPPAPI: ZXingCPP API is unavailable.\n"+e)})}function J(a,t){var n=new l({title:X.getProperty("BARCODE_DIALOG_BUSY_TITLE"),text:X.getProperty("BARCODE_DIALOG_BUSY_TEXT_ZXINGCPP")});n.open();R("ZXingCPP",x.Loading);Promise.all([Q(),ee()]).then(function(){_("ZXingCPP");if(N()==="unknown"){H("ZXingCPP")}e.debug("BarcodeScanner.loadZXingCPPInstances: ZXingCPP API is available!");n.close();a()},function(e){Y(e);n.close();t()})}function $(e,a,t){if(!a||a===""){return sap.ui.require.toUrl("sap/ndc/thirdparty/"+t+"/")+e}return a+e}function Q(){return new Promise(function(a,t){var n={locateFile:function(e,a){return $(e,a,"zxingcpp")}};var r=k.getProperty("/apis/ZXingCPP/instance");r(n).then(function(t){if(W("ZXingCPP")){e.warning("BarcodeScanner.loadZXingCPPInstance: ZXingCPP is set to unavailable by failure of loading opencv instance!")}else{k.setProperty("/apis/ZXingCPP/scannerAPI",t);e.debug("BarcodeScanner.loadZXingCPPInstance: wasm lib instance of ZXingCPP is available!")}a()},function(e){t("BarcodeScanner.loadZXingCPPInstance: can not load wasm lib instance of ZXingCPP.\n"+e)})})}function ee(){return new Promise(function(a,t){var n={locateFile:function(e,a){return $(e,a,"opencv")}};var r=k.getProperty("/apis/ZXingCPP/openCV/instance");r(n).then(function(t){if(W("ZXingCPP")){e.warning("BarcodeScanner.loadOpenCVInstance: ZXingCPP is set to unavailable by failure of loading zxingcpp instance!")}else{k.setProperty("/apis/ZXingCPP/openCV/scannerAPI",t);e.debug("BarcodeScanner.loadOpenCVInstance: wasm lib instance of opencv is available!")}a()},function(e){t("BarcodeScanner.loadOpenCVInstance: can not load wasm lib instance of opencv.\n"+e)})})}function ae(){return!!(window&&window.navigator&&window.navigator.mediaDevices&&window.navigator.mediaDevices.enumerateDevices)}function te(){e.debug("BarcodeScanner.getDeviceCameras: start to get device cameras");window.navigator.mediaDevices.enumerateDevices().then(function(a){var t=k.getProperty("/devices");var n=0;a.forEach(function(a){if(a.kind==="videoinput"){n++;var r={deviceId:a.deviceId,groupId:a.groupId,kind:a.kind,label:a.label};if(r.label&&r.label!==""){if(r.label.indexOf("0, facing back")>0){e.debug("BarcodeScanner.getDeviceCameras: has a camera with label contains '0, facing back', set it as main camera.");t.needCheck=false;t.mainCamera=r}if(r.label.indexOf("back")>0){t.back.push(r)}else if(r.label.indexOf("front")>0){t.front.push(r)}}else{r.label="Camera "+n}t.all.push(r)}});if(!t.mainCamera){if(t.back.length===1){e.debug("BarcodeScanner.getDeviceCameras: has only one camera which label contains 'back', set it as main camera.");t.mainCamera=y(t.back[0]);t.needCheck=false}else if(t.all.length===1){e.debug("BarcodeScanner.getDeviceCameras: has only one camera, set it as main camera.");t.mainCamera=y(t.all[0]);t.needCheck=false}}k.setProperty("/devices",t);re()}).catch(function(a){k.setProperty("/devices/needCheck",false);e.error("BarcodeScanner.getDeviceCameras: Can not get device cameras.\n"+a)})}function ne(a,t){var n=y(a);var r=a.length;var i=function(){if(n.length===0){k.setProperty("/devices/needCheck",false);re();e.debug("BarcodeScanner.findMainCamera: can not find the main camera.");t()}else{var o=n.pop();r--;var s=y(k.getProperty("/config/defaultConstraints"));s.video.deviceId={exact:o.deviceId};window.navigator.mediaDevices.getUserMedia(s).then(function(t){var n=typeof t.stop==="function"?t:t.getTracks()[0];ie(n).then(function(){a[r].hasFlashLight=true;k.setProperty("/devices/mainCamera",a[r]);k.setProperty("/devices/needCheck",false);re();e.debug("BarcodeScanner.findMainCamera: the main camera is "+o.deviceId);w&&w.getModel().setProperty("/hasFlashLight",true);k.setProperty("/scanDialog/hasFlashLight",true);e.debug("BarcodeScanner.findMainCamera: enable flashlight");B=t;if(N()!=="ZXing"&&G("ZXingCPP")||N()==="ZXing"&&G("ZXing")){Ae()}else{w&&w.getModel().setProperty("/isNoScanner",true);me()}},function(){a[r].hasFlashLight=false;n.stop();e.debug("BarcodeScanner.findMainCamera: "+o.deviceId+" is not the main camera, check the next camera");i()})}).catch(function(){i()})}};i()}function re(){e.debug("BarcodeScanner.updateDevicesInStatusModel: update the devices in status model");var a=y(k.getProperty("/devices/all"));F.setProperty("/devices",a)}function ie(a){if(!("ImageCapture"in window)){return new Promise(function(a,t){e.debug("BarcodeScanner.checkFlashLight: Device does not support image capture");t()})}else if(!a){return new Promise(function(a,t){e.debug("BarcodeScanner.checkFlashLight: Camera is not opened");t()})}else{var t=new ImageCapture(a);return new Promise(function(a,n){t.getPhotoCapabilities().then(function(t){if(t.fillLightMode&&t.fillLightMode.includes("flash")){e.debug("BarcodeScanner.checkFlashLight: Camera supports flashlight");a()}else{e.debug("BarcodeScanner.checkFlashLight: Camera doesn't support flashlight");n()}}).catch(function(a){e.debug("BarcodeScanner.checkFlashLight: Camera not started or not available\n"+a);n()})})}}function oe(){if(!k.getProperty("/scanDialog/hasFlashLight")){e.error("BarcodeScanner.toggleFlashLight: No flashlight currently");return}var a=k.getProperty("/scanDialog/flashLightOn");var t=!a?"Open":"Close";var n=typeof B.stop==="function"?B:B.getTracks()[0];n.applyConstraints({advanced:[{torch:!a}]}).then(function(){k.setProperty("/scanDialog/flashLightOn",!a);e.debug("BarcodeScanner.toggleFlashLight: "+t+" flashlight of camera success.")}).catch(function(a){var n="BARCODE_DIALOG_"+t.toUpperCase()+"_FLASHLIGHT_ERROR_MSG";f.show(X.getResourceBundle().getText(n),{duration:1e3});e.error("BarcodeScanner.toggleFlashLight: "+t+" flashlight of camera failed. Error Message:"+a)})}function se(){var e=k.getProperty("/scanDialog/flashLightOn");if(e){oe()}if(A){return A.click()}}function ce(){var e=k.getProperty("/scanDialog/isDecodePaused");if(e){k.setProperty("/scanDialog/isDecodePaused",false);w&&w.getModel().setProperty("/isDecodePaused",false);if(Z){Z.hidden=true}if(T){T.hidden=false}E.style.visibility="visible";E.play().then(function(){if(P.support.orientation){Fe()}Ze()})}else{E.pause();if(T){T.hidden=true}k.setProperty("/scanDialog/isDecodePaused",true);w&&w.getModel().setProperty("/isDecodePaused",true)}}function le(){var e=A.files[0];if(e){Re();de(e)}}function de(e){var a=new l({title:X.getProperty("BARCODE_DIALOG_SCAN_IMAGE_BUSY_TITLE")});a.open();k.setProperty("/busyDialog",a);k.setProperty("/scanDialog/scanningStartTime",Date.now());var t=new FileReader;t.onload=function(e){fe(e.target.result).then(function(a){ue(a,e.target.result)},function(){a.close();b.closeScanDialog();f.show(X.getResourceBundle().getText("BARCODE_DIALOG_SCAN_IMAGE_COMPRESS_FAILED_MSG"),{duration:1e3})})};t.onerror=function(){b.closeScanDialog();a.close();f.show(X.getResourceBundle().getText("BARCODE_DIALOG_SCAN_IMAGE_LOAD_FAILED_MSG"),{duration:1e3})};t.readAsDataURL(e)}function ue(a,t){var n=true;var r=a;if(!a&&t){n=false;var i=t.split(",")[1];i=window.atob(i);r=new Uint8Array(i.length);for(var o=0;o<i.length;o++){r[o]=i.charCodeAt(o)}e.debug("Use the original image data to scan")}var s;var c=k.getProperty("/apis/ZXingCPP/scannerAPI");try{s=c._malloc(r.length);c.HEAPU8.set(r,s)}catch(a){e.info("BarcodeScanner.decodeImageData: zxing.HEAPU8 error: "+a)}var l=k.getProperty("/apis/ZXingCPP/multiScan");var d=l.enabled?l.maxBarcodeNumber:1;var u=c.readBarcodesForNDCFromImage(s,r.length,true,"",d);c._free(s);var g=k.getProperty("/busyDialog");if(u.size===1){if(g){g.close();k.setProperty("/busyDialog",null)}var p=u.barcodes.get(0);Oe(p)}else if(u.size>1){if(g){g.close();k.setProperty("/busyDialog",null)}if(Z){Z.hidden=false}var h;if(a){var P=32768;var y=[];for(var v=0;v<a.length;v+=P){y.push(String.fromCharCode.apply(null,a.subarray(v,v+P)))}y=y.join("");h="data:image/jpeg;base64,"+window.btoa(y)}else{h=t}ge(h).then(function(e){Le(u,true,e)})}else if(n){ue(null,t)}else{if(g){g.close();k.setProperty("/busyDialog",null)}f.show(X.getResourceBundle().getText("BARCODE_DIALOG_SCAN_IMAGE_ERROR_MSG"),{duration:1e3})}}function fe(a){var t=1080,n="image/jpeg";return new Promise(function(r,i){var o=new Image;o.onload=function(){var a=this.width,i=this.height,s=document.createElement("canvas"),c=s.getContext("2d");var l=a,d=i;if(a<=i&&a>t){l=t;d=Math.round(i*(t/a))}else if(a>=i&&i>t){d=t;l=Math.round(a*(t/i))}e.debug("Compress image data. The width is "+l+"; the Height is "+d);s.width=l;s.height=d;var u=(I.getDomRef().clientWidth-l)/2;var f=(I.getDomRef().clientHeight-d)/2;s.style.left=u+"px";s.style.top=f+"px";c.drawImage(o,0,0,l,d);var g=s.toDataURL(n);g=g.split(",")[1];g=window.atob(g);var p=new Uint8Array(g.length);for(var h=0;h<g.length;h++){p[h]=g.charCodeAt(h)}r(p)};o.onerror=function(){i()};o.src=a})}function ge(e,a){return new Promise(function(t,n){if(a){pe(Z.oImage,t)}else{var r=new Image;r.onload=function(){Z.oImage=r;pe(r,t)};r.onerror=function(){Z.oImage=null;n()};r.src=e}})}function pe(a,t){var n=E.clientWidth,r=E.clientHeight,i=a.width,o=a.height,s=i,c=o,l=Z.getContext("2d");l.clearRect(0,0,n,r);if(i>n||o>r){if(i/o>n/r){s=n;c=Math.round(n*(o/i))}else{c=r;s=Math.round(r*(i/o))}}e.debug("Compress image data. The width is "+s+"; the Height is "+c);Z.width=n;Z.height=r;var d=(I.getDomRef().clientWidth-s)/2;var u=(I.getDomRef().clientHeight-c)/2;l.drawImage(a,d,u,s,c);var f=Math.round(s*100/i)/100;var g={left:d,top:u,imageScaleRate:f};t(g)}function he(){return!!(window&&window.navigator&&window.navigator.mediaDevices&&window.navigator.mediaDevices.getUserMedia)}function Pe(){try{if(self!=top&&typeof cordova==="undefined"){window.cordova=top.cordova}}catch(a){e.info("BarcodeScanner.checkCordovaInIframe: cordova is unavailable in cross-origin iframe")}}function ye(){try{if(self!=top&&(typeof EB==="undefined"||typeof window.Rho==="undefined")){if(typeof top.EB!=="undefined"||typeof top.Rho!=="undefined"){window.EB=top.EB;window.Rho=top.Rho}}if(typeof EB!=="undefined"&&typeof EB.Barcode!=="undefined"){_("ZebraEnterpriseBrowser",true);e.debug("BarcodeScanner.initZebraEB: Zebra Enterprise Browser plugin is available!")}else{M("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.initZebraEB: Zebra Enterprise Browser plugin is unavailable!")}}catch(a){e.info("BarcodeScanner.initZebraEB: EB and Rho are unavailable")}}function ve(){Pe();k.setProperty("/available",true);F.setProperty("/available",true);if(P.os.android){jQuery(document).ready(function(){ye();Ge()})}else{M("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.init: Not Android device, Zebra Enterprise Browser plugin is unavailable!")}if(sap.Settings&&typeof sap.Settings.isFeatureEnabled==="function"){sap.Settings.isFeatureEnabled("cordova.plugins.barcodeScanner",function(a){if(a){V()}else{z();e.warning("BarcodeScanner.init: Feature disabled in sap.Settings");V()}},function(){e.warning("BarcodeScanner.init: Feature check failed");V()})}else{if(sap.Settings===undefined){e.debug("BarcodeScanner.init: No sap.Settings. No feature vector available.")}else{e.warning("BarcodeScanner.init: Feature vector (sap.Settings.isFeatureEnabled) is unavailable")}V()}}function me(a){if(a){e.warning("BarcodeScanner.openBarcodeInputDialog: isNoScanner. Message: "+a)}w.setShowHeader(true);w.destroyContent();w.setTitle("");w.setStretch(false);w.setContentHeight("auto");if(T){T.hidden=true}w.removeStyleClass("sapUiNoContentPadding");w.setTitle(k.getProperty("/scanDialog/title"));var t=new i(w.getId()+"-txt_barcode",{text:"{i18n>BARCODE_DIALOG_MSG}",visible:"{/isNoScanner}"});w.addContent(t);var n=new r(w.getId()+"-inp_barcode",{value:"{/barcode}",valueLiveUpdate:true,ariaLabelledBy:t.getId(),liveChange:function(e){var a=k.getProperty("/scanDialog/onLiveUpdate");if(typeof a==="function"){a({newValue:e.getParameter("newValue")})}},placeholder:"{i18n>BARCODE_DIALOG_PLACEHOLDER}"});w.addContent(n);var s=g.ButtonType;w.setBeginButton(new o(w.getId()+"-btn_barcode_ok",{type:s.Emphasized,text:"{i18n>BARCODE_DIALOG_OK}",press:function(e){var a=k.getProperty("/callBackHandler/onFnSuccess");if(typeof a==="function"){var t="unknown";if(k.getProperty("/scanDialog/scanningStartTime")>0){var n=Date.now();t=n-k.getProperty("/scanDialog/scanningStartTime")}a({text:w.getModel().getProperty("/barcode"),scanningTime:t,cancelled:false})}b.closeScanDialog()}}));w.setEndButton(new o({text:"{i18n>BARCODE_DIALOG_CANCEL}",press:function(){b.closeScanDialog()}}));w.setBusy(false);w.open()}function Se(){if(!k.getProperty("/config/preferFrontCamera")){delete k.getProperty("/config/defaultConstraints/video").facingMode;var a=k.getProperty("/devices");if(he()&&!k.getProperty("/config/deviceId")&&!a.mainCamera&&!P.os.ios&&a.needCheck&&a.all.length>1){var t=a.back.length>1?a.back:a.all;var n=a.back.length>1?"back":"all";e.debug("BarcodeScanner.openBarcodeScannerDialog: start to find the main camera in "+n+" camera list.");ne(t,be);return}}be()}function be(){var e=false;if(k.getProperty("/config/deviceId")){delete k.getProperty("/config/defaultConstraints/video").facingMode;k.setProperty("/config/defaultConstraints/video/deviceId",{exact:k.getProperty("/config/deviceId")})}else if(k.getProperty("/config/preferFrontCamera")){k.setProperty("/config/defaultConstraints/video/facingMode","user");delete k.getProperty("/config/defaultConstraints/video").deviceId}else{var a=k.getProperty("/devices");if(a.mainCamera&&a.mainCamera.deviceId!==""){e=true;k.setProperty("/config/defaultConstraints/video/deviceId",{exact:a.mainCamera.deviceId})}else{k.setProperty("/config/defaultConstraints/video/facingMode","environment")}}window.navigator.mediaDevices.getUserMedia(k.getProperty("/config/defaultConstraints")).then(function(t){B=t;if(P.os.ios){k.setProperty("/scanDialog/hasFlashLight",false);w&&w.getModel().setProperty("/hasFlashLight",false)}else{if(e&&typeof a.mainCamera.hasFlashLight==="boolean"){k.setProperty("/scanDialog/hasFlashLight",a.mainCamera.hasFlashLight);w&&w.getModel().setProperty("/hasFlashLight",a.mainCamera.hasFlashLight)}else{var n=typeof t.stop==="function"?t:t.getTracks()[0];ie(n).then(function(){k.setProperty("/scanDialog/hasFlashLight",true);if(e){a.mainCamera.hasFlashLight=true}w&&w.getModel().setProperty("/hasFlashLight",true)},function(){k.setProperty("/scanDialog/hasFlashLight",false);if(e){a.mainCamera.hasFlashLight=false}w&&w.getModel().setProperty("/hasFlashLight",false)})}}if(N()!=="ZXing"&&G("ZXingCPP")&&B||N()==="ZXing"&&G("ZXing")){Ae()}else{k.setProperty("/scanDialog/isNoScanner",true);me()}}).catch(function(){k.setProperty("/scanDialog/isNoScanner",true);me()})}function Be(){k.checkUpdate(true);var e;if(!w||w&&w.getContent().length===0){e=new a({hasFlashLight:k.getProperty("/scanDialog/hasFlashLight")&&!P.os.ios,isDecodePaused:k.getProperty("/scanDialog/isDecodePaused"),showPauseButton:k.getProperty("/apis/ZXingCPP/multiScan/enabled")&&k.getProperty("/apis/ZXingCPP/multiScan/showPauseButton")});w=new s("sapNdcBarcodeScannerDialog",{icon:"sap-icon://bar-code",title:X.getProperty("BARCODE_DIALOG_SCANNING_TITLE"),stretch:true,horizontalScrolling:false,verticalScrolling:false,afterClose:function(){w.destroyContent();w.destroy();w=null}});w.setEscapeHandler(function(a){b.closeScanDialog();var t=k.getProperty("/callBackHandler/onFnSuccess");if(typeof t==="function"){t({text:e.getProperty("/barcode"),cancelled:true})}a.resolve()});w.setModel(e);w.setModel(X,"i18n")}if((G("ZXingCPP")||G("ZXing"))&&he()){Se()}else{if(k.getProperty("/available")){k.setProperty("/scanDialog/isNoScanner",false)}else{k.setProperty("/scanDialog/isNoScanner",true)}me()}return w}function Ce(){k.setProperty("/bReady",true);k.setProperty("/callBackHandler/callBackFromSetPhysicalScan",false);EB.Barcode.triggerType=EB.Barcode.SOFT_ONCE;EB.Barcode.start()}function De(){var a;if(k.getProperty("/config/preferFrontCamera")){a={preferFrontCamera:true}}k.getProperty("/apis/Cordova/scannerAPI").scan(function(e){if(e.cancelled==="false"||!e.cancelled){e.cancelled=false;var a=k.getProperty("/callBackHandler/onFnSuccess");if(typeof a==="function"){a(e)}}else{Be()}k.setProperty("/bReady",true)},function(a){e.error("BarcodeScanner.scanWithCordova: Barcode scanning failed.");k.setProperty("/bReady",true);var t=k.getProperty("/callBackHandler/onFnFail");if(typeof t==="function"){if(typeof a==="string"){var n=a;a={text:n};e.debug("BarcodeScanner.scanWithCordova: Change the type of oEvent from string to object")}t(a)}},a)}function we(){if(U("ZXing",x.Initial)){e.debug("BarcodeScanner.scanWithZXing: ZXing is not loaded, start to load it.");j(function(){Be()},function(){if(W("ZXingCPP")){e.warning("BarcodeScanner.scanWithZXing: ZXingCPP is unavailable too, no feature scanner API available now.");k.setProperty("/available",false);F.setProperty("/available",false);e.warning("BarcodeScanner.scanWithZXing: Set feature available to False");if(G("ZebraEnterpriseBrowser")){H("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.scanWithZXing: Zebra is available, set the current scanner API to Zebra.")}else{H("unknown");e.warning("BarcodeScanner.scanWithZXing: Zebra is unavailable too, set the current scanner API to unknown.")}Be()}else{H("ZXingCPP");e.debug("BarcodeScanner.scanWithZXing: ZXingCPP is NOT UnAvailable, switch to ZXingCPP to scan barcode.");Ie()}})}else{Be()}}function Ie(){if(U("ZXingCPP",x.Initial)){e.debug("BarcodeScanner.scanWithZXingCPP: ZXingCPP instances is not loaded, start to load them.");J(function(){Be()},function(){if(W("ZXing")){e.warning("BarcodeScanner.scanWithZXingCPP: ZXing is unavailable too, no feature scanner API available now.");k.setProperty("/available",false);F.setProperty("/available",false);e.warning("BarcodeScanner.scanWithZXingCPP: Set feature available to False");if(G("ZebraEnterpriseBrowser")){H("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.scanWithZXingCPP: Zebra is available, set the current scanner API to Zebra.")}else{H("unknown");e.warning("BarcodeScanner.scanWithZXingCPP: Zebra is unavailable too, set the current scanner API to unknown.")}Be()}else{e.debug("BarcodeScanner.scanWithZXingCPP: ZXing is NOT UnAvailable, switch to ZXing to scan barcode.");we()}})}else{Be()}}function Ee(){w.setBusy(false);if(!E){E=I?I.getDomRef("video"):undefined;if(E){document.body.style.setProperty("--sapNdcRTCDialogVideoHeight",E.clientHeight+"px");document.body.style.setProperty("--sapNdcRTCDialogVideoWidth",E.clientWidth+"px")}}if(!A){A=I?I.getDomRef("image"):undefined;if(A){A.addEventListener("change",le)}}if(!Z){Z=I?I.getDomRef("canvas"):undefined}}function Ae(){var a=k.getProperty("/apis/ZXingCPP/multiScan");var t=a.enabled?a.maxBarcodeNumber:1;if(N()!=="ZXing"){e.debug("BarcodeScanner.openBarcodeScannerDialogContains: Use ZXingCPP to read the barcode.");w.attachAfterOpen(function(){Ee();try{E.srcObject=B;E.play().then(function(){if(!C){E.width=E.videoWidth;E.height=E.videoHeight;var e=k.getProperty("/apis/ZXingCPP/openCV/scannerAPI");C=new e.Mat(E.videoHeight,E.videoWidth,e.CV_8UC4);D=new e.VideoCapture(E)}var t=E.clientWidth/E.videoWidth;var n=E.clientHeight/E.videoHeight;k.setProperty("/scanDialog/videoScaleX",t);k.setProperty("/scanDialog/videoScaleY",n);if(a.enabled&&P.support.orientation){var r=P.orientation.portrait?"portrait":"landscape";k.setProperty("/scanDialog/originOrientation",r);window.addEventListener("orientationchange",ke)}Ze()})}catch(a){e.debug("BarcodeScanner.openBarcodeScannerDialogContains is failed. error: "+a)}})}else{t=1;e.debug("BarcodeScanner.openBarcodeScannerDialogContains: Use zxing to read the barcode.");if(P.os.ios&&P.os.versionStr.split(".")[0]==="16"&&B){var n=typeof B.stop==="function"?B:B.getTracks()[0];n.stop()}w.attachAfterOpen(function(){Ee();Te()})}w.setShowHeader(false);w.destroyContent();T=undefined;E=undefined;A=undefined;Z=undefined;I=new u;I.oResourceModel=X;I.prepareBarcodeAvatars(t);I.setAggregation("_oCloseButton",new v({src:"sap-icon://decline",backgroundColor:"Transparent",tooltip:X.getResourceBundle().getText("BARCODE_DIALOG_STOP_SCANNING_BUTTON_TOOLTIP"),press:function(){w.getModel().setProperty("/isNoScanner",false);Ue();me()}}).addStyleClass("sapNdcRTCDialogButton").addStyleClass("closeButton"));I.setAggregation("_oFlashLightButton",new v({src:"sap-icon://lightbulb",visible:"{/hasFlashLight}",backgroundColor:"Transparent",tooltip:{path:"/flashLightOn",formatter:function(e){var a="";if(!e){a="BARCODE_DIALOG_SELECT_FLASHLIGHT_BUTTON_TOOLTIP_OPEN"}else{a="BARCODE_DIALOG_SELECT_FLASHLIGHT_BUTTON_TOOLTIP_CLOSE"}return X.getResourceBundle().getText(a)}},press:function(){oe()}}).addStyleClass("sapNdcRTCDialogButton").addStyleClass("flashLightButton"));var r=new c({visible:N()!=="ZXing",alignItems:"Start",justifyContent:"SpaceBetween",items:[new v({visible:"{/showPauseButton}",backgroundColor:"Transparent",src:{path:"/isDecodePaused",formatter:function(e){if(e){return"sap-icon://media-play"}else{return"sap-icon://media-pause"}}},tooltip:{path:"/isDecodePaused",formatter:function(e){if(e){return X.getResourceBundle().getText("BARCODE_DIALOG_SCAN_BUTTON_TOOLTIP_START")}else{return X.getResourceBundle().getText("BARCODE_DIALOG_SCAN_BUTTON_TOOLTIP_PAUSE")}}},press:function(){ce()}}).addStyleClass("sapNdcRTCDialogControlButton"),new v({src:"sap-icon://picture",backgroundColor:"Transparent",tooltip:X.getResourceBundle().getText("BARCODE_DIALOG_SELECT_IMAGE_BUTTON_TOOLTIP"),press:function(){se()}}).addStyleClass("sapNdcRTCDialogControlButton")]});if(k.getProperty("/apis/ZXingCPP/multiScan/showPauseButton")){r.addStyleClass("sapNdcRTCDialogControlFlexBoxWithPauseButton")}else{r.addStyleClass("sapNdcRTCDialogControlFlexBoxWithoutPauseButton")}I.setAggregation("_oControlFlexBox",r);w.addContent(I);w.setContentWidth("100%");w.setContentHeight("100%");w.addStyleClass("sapUiNoContentPadding");w.setBusy(true);w.open();k.setProperty("/scanDialog/barcodeOverlaySetup",false)}function Ze(){if(!E||!E.srcObject){if(C){C.delete();C=null}return}if(k.getProperty("/scanDialog/isDecodePaused")){return}Ne(E);var a;try{D.read(C);a=C.data}catch(a){e.info("BarcodeScanner.decodeWithZXingCPP: cap.read error: "+a)}try{if(k.getProperty("/scanDialog/barcodeOverlaySetup")){Re()}var t;var n=k.getProperty("/apis/ZXingCPP/scannerAPI");try{t=n._malloc(a.length);n.HEAPU8.set(a,t)}catch(a){e.info("BarcodeScanner.decodeWithZXingCPP: zxing.HEAPU8 error: "+a)}var r=C.cols;var i=C.rows;var o=k.getProperty("/apis/ZXingCPP/multiScan");var s=o.enabled?o.maxBarcodeNumber:1;var c=n.readBarcodesForNDCFromPixmap(t,r,i,true,"",s);n._free(t);if(o.enabled&&c.size>0){var l=!o.showPauseButton&&o.pauseIfHasResult;var d=l&&o.stopIfOnlyHasOneResult;if(d&&c.size===1){var u=c.barcodes.get(0);xe(u);Oe(u)}else{Le(c,l)}}else if(c.size===1){var u=c.barcodes.get(0);xe(u);Oe(u)}else{if(k.getProperty("/scanDialog/barcodeOverlaySetup")){Re()}setTimeout(Ze,0)}}catch(a){e.debug("BarcodeScanner: err1: "+a)}}function Te(){var a=new Map;var t=k.getProperty("/apis/ZXing/instance");a.set(t.DecodeHintType.ASSUME_GS1,true);var n=k.getProperty("/apis/ZXing/scannerAPI");n.reader.setHints(a);var r=function(a,n){Ne(E);if(a){xe(a);if(a.cancelled==="false"||!a.cancelled){a.cancelled=false;var r=k.getProperty("/callBackHandler/onFnSuccess");if(typeof r==="function"){a.scanningTime="unknown";if(k.getProperty("/scanDialog/scanningStartTime")>0){var i=Date.now();a.scanningTime=i-k.getProperty("/scanDialog/scanningStartTime")}if(!k.getProperty("/config/enableGS1Header")&&a.text.indexOf("]C1")===0){a.text=a.text.split("]C1")[1]}r(a)}b.closeScanDialog()}}else if(k.getProperty("/scanDialog/barcodeOverlaySetup")){_e()}if(n&&t&&!(n instanceof t.NotFoundException)){e.warning("BarcodeScanner.decodeWithZXing: Started continuous decode failed.");var o=k.getProperty("/callBackHandler/onFnFail");if(typeof o==="function"){o(n);k.setProperty("/scanDialog/isNoScanner",true);me()}}};n.decodeFromConstraints(k.getProperty("/config/defaultConstraints"),E.id,r)}function xe(e,a,t){t=Object.assign({left:0,top:0,imageScaleRate:1},t);a=a||0;var n=0,r=0,i,o;if(I&&Array.isArray(I._aBarcodeAvatars)){i=I._aBarcodeAvatars[a]}if(i){i.oBarcode=e;o=i.getDomRef()}if(o){if(!k.getProperty("/scanDialog/barcodeOverlaySetup")){k.setProperty("/scanDialog/barcodeOverlaySetup",true)}if(e.position){e.resultPoints=[e.position.topLeft,e.position.topRight,e.position.bottomRight,e.position.bottomLeft]}if(e.resultPoints&&e.resultPoints.length>0){var s=e.resultPoints.length;for(var c=0;c<s;c++){r+=e.resultPoints[c].x;n+=e.resultPoints[c].y}r=r*t.imageScaleRate/s;n=n*t.imageScaleRate/s}if(Z&&!Z.hidden){r+=t.left;n+=t.top}else{r=r*k.getProperty("/scanDialog/videoScaleX");n=n*k.getProperty("/scanDialog/videoScaleY")}o.style.visibility="visible";o.style.left="calc("+r+"px - 1.5rem)";o.style.top="calc("+n+"px - 1.5rem)"}}function ke(){setTimeout(function(){Fe();if(Z&&Z.oImage&&!Z.hidden){ge(undefined,true).then(Me)}},200)}function Fe(){var e=k.getProperty("/scanDialog/videoScaleX"),a=k.getProperty("/scanDialog/videoScaleY"),t=k.getProperty("/scanDialog/originOrientation"),n=true;if(P.os.ios&&P.browser.chrome){var r="portrait";if(window.orientation==90||window.orientation==-90){r="landscape"}n=r===t}else{n=P.orientation[t]}if(n){e=E.clientWidth/E.videoWidth;a=E.clientHeight/E.videoHeight}else{e=E.clientWidth/E.videoHeight;a=E.clientHeight/E.videoWidth}k.setProperty("/scanDialog/videoScaleX",e);k.setProperty("/scanDialog/videoScaleY",a);if(E){document.body.style.setProperty("--sapNdcRTCDialogVideoHeight",E.clientHeight+"px");document.body.style.setProperty("--sapNdcRTCDialogVideoWidth",E.clientWidth+"px")}}function Xe(e,a){a=a||0;var t;if(I&&Array.isArray(I._aBarcodeAvatars)){t=I._aBarcodeAvatars[a]}if(t){t.removeAllCustomData();t.addCustomData(new m({key:"barcode",value:e}));t.addCustomData(new m({key:"press",value:function(e){Oe(e)}}))}}function Oe(e){var a=k.getProperty("/callBackHandler/onFnSuccess");if(typeof a==="function"){e.scanningTime="unknown";if(k.getProperty("/scanDialog/scanningStartTime")>0){var t=Date.now();e.scanningTime=t-k.getProperty("/scanDialog/scanningStartTime")}if(k.getProperty("/config/enableGS1Header")){e.text=e.symbologyIdentifier+e.text}a(e)}b.closeScanDialog()}function Le(e,a,t){var n=e.size;for(var r=0;r<n;r++){var i=e.barcodes.get(r);xe(i,r,t);Xe(i,r)}if(a){k.setProperty("/scanDialog/isDecodePaused",true);w&&w.getModel().setProperty("/isDecodePaused",true);if(E){E.pause()}if(T){T.hidden=true}}else{setTimeout(Ze,0)}}function Re(){var e=k.getProperty("/apis/ZXingCPP/multiScan");var a=e.enabled?e.maxBarcodeNumber:1;for(var t=0;t<a;t++){_e(t)}}function _e(e){e=e||0;var a,t;if(I&&Array.isArray(I._aBarcodeAvatars)){a=I._aBarcodeAvatars[e]}if(a){a.oBarcode=undefined;t=a.getDomRef()}if(t){t.hidden=true;t.style.visibility="hidden";t.style.top=0;t.style.left=0}}function Me(e){var a=k.getProperty("/apis/ZXingCPP/multiScan");var t=a.enabled?a.maxBarcodeNumber:1;if(I&&Array.isArray(I._aBarcodeAvatars)){for(var n=0;n<t;n++){var r=I._aBarcodeAvatars[n];if(r&&r.oBarcode){var i=r.getDomRef();if(i&&i.style.visibility==="visible"){xe(r.oBarcode,n,e)}}}}}function Ne(e){if(!w||!e||!e.videoHeight||!e.videoWidth){return}var a=.15;if(!T&&I){T=I.getDomRef("overlay")}He(e);if(T){var t=e.clientWidth*(1-2*a);var n=e.clientHeight*(1-2*a);if(t<=n){n=t*(1-2*a)}var r=I.getDomRef("overlay-box");if(r){r.style.width=t+"px";r.style.height=n+"px";T.style.width=t+"px";T.style.height=n+"px";T.style.borderWidth=(e.clientHeight-n)/2+"px "+(e.clientWidth-t)/2+"px"}}document.body.style.setProperty("--sapNdcRTCDialogVideoHeight",e.clientHeight+"px");document.body.style.setProperty("--sapNdcRTCDialogVideoWidth",e.clientWidth+"px")}function He(a){if(k.getProperty("/config/zoom")!=="skipUpdateZoom"&&a){var t=a.srcObject.getVideoTracks();var n=window.navigator.mediaDevices.getSupportedConstraints();var r=t[0].getCapabilities();if(n.zoom&&r&&r.zoom){e.debug("BarcodeScanner.updateZoom: Support zoom to update");if(k.getProperty("/config/zoom")==="undefined"||k.getProperty("/config/zoom")===null){k.setProperty("/config/zoom",r.zoom.min)}}else{e.debug("BarcodeScanner.updateZoom: Don't support zoom or getCapabilities() failed.");k.setProperty("/config/zoom","skipUpdateZoom");return}try{var i=k.getProperty("/config/zoom");t[0].applyConstraints({advanced:[{zoom:i}]}).then(function(){k.setProperty("/config/zoom","skipUpdateZoom");e.debug("BarcodeScanner.updateZoom: Zoom is updated to "+i)}).catch(function(a){if(a&&a.message&&a.message.match(/out of range|Failed to read the 'zoom' property/i)){k.setProperty("/config/zoom","skipUpdateZoom");f.show(X.getResourceBundle().getText("BARCODE_DIALOG_CAMERA_UPDATE_PARAMETER_ERROR_MSG","zoom"),{duration:1e3})}else{e.error("BarcodeScanner.updateZoom: Update zoom to "+i+" failed. Error Message:"+a)}})}catch(a){e.error("BarcodeScanner.updateZoom: applyConstraints() failed. Error Message:"+a);k.setProperty("/config/zoom","skipUpdateZoom")}var o=t[0].getSettings();e.debug("BarcodeScanner.updateZoom: frameRate is "+o.frameRate+". zoom is "+o.zoom)}}function Ue(){if(I){I.destroy()}if(N()==="ZXing"&&G("ZXing")){var e=k.getProperty("/apis/ZXing/scannerAPI");e.reset();e.stopContinuousDecode();e.reader.reset()}if(B){var a=typeof B.stop==="function"?B:B.getTracks()[0];a.stop();B=undefined}if(C){C.delete();C=undefined}D=undefined}function Ge(){k.checkUpdate(true);var a=k.getProperty("/apis/ZebraEnterpriseBrowser/enableZebraBarcodeRetryCount");var t=k.getProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState");if(N()==="ZebraEnterpriseBrowser"&&G("ZebraEnterpriseBrowser")&&t!==true){var n=function(a){if(a["data"]==""||a["time"]==""){var t=k.getProperty("/callBackHandler/onFnFail");if(typeof t==="function"){var n={text:"Zebra Scan failed",resultStatus:"Error"};if(k.getProperty("/callBackHandler/callBackFromSetPhysicalScan")){n=new p("scanFailEvent",new h,n)}t(n)}e.error("BarcodeScanner.zebraEBScanEnable: Zebra Enterprise Browser Scan Failed")}else{e.debug("BarcodeScanner.zebraEBScanEnable: Zebra EB Scan Result: "+a.data+"; Scan Json: "+JSON.stringify(a));var r=k.getProperty("/callBackHandler/onFnSuccess");if(typeof r==="function"){var i="unknown";if(k.getProperty("/scanDialog/scanningStartTime")>0){var o=Date.now();i=o-k.getProperty("/scanDialog/scanningStartTime")}var s={text:a.data,format:a.source,resultStatus:"Success",scanningTime:i,cancelled:false};if(k.getProperty("/callBackHandler/callBackFromSetPhysicalScan")){s=new p("scanSuccessEvent",new h,s)}r(s);k.setProperty("/scanDialog/scanningStartTime",0)}}};if(k.getProperty("/config/enableGS1Header")){EB.Barcode.codeIdType=EB.Barcode.CODEIDTYPE_AIM}else{EB.Barcode.codeIdType=EB.Barcode.CODEIDTYPE_NONE}EB.Barcode.enable({},n);k.setProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState",true);e.debug("BarcodeScanner.zebraEBScanEnable: try to enable EB Barcode in ("+(6-a)+") times")}else if(a>1&&t==="init"){a--;k.setProperty("/apis/ZebraEnterpriseBrowser/enableZebraBarcodeRetryCount",a);ye();setTimeout(Ge,500)}else{e.debug("BarcodeScanner.zebraEBScanEnable: The scanner API is not ZebraEnterpriseBrowser or cannot been enabled.")}}function We(){var e=k.getProperty("/scanDialog/keepCameraScan");var a=false;if(G("ZebraEnterpriseBrowser")&&(!e||typeof e!=="boolean")){a=true}return a}function ze(a){var t=k.getProperty("/apis/BluetoothScanner/");if(a.key==="Unidentified"&&t.replaceGS1Separator){var n=a.keyCode||a.which;var r=String.fromCharCode(n);a.key=r;e.debug("The unidentified oEvent.key is replaced by (keyCode:"+n+"|keyCharacter:"+r)}if(t.resultBuffer.length>5e3){e.error("Key Buffer contains "+t.resultBuffer.length+" characters");var i={resultBuffer:[]};b.enableBluetoothBarcodeScanner(null,i)}else if(k.getProperty("/bReady")&&G("BluetoothScanner")){if(t.scanningMode==="TimeInterval"){Ve(a,t)}else if(t.scanningMode==="PrefixSuffix"){Ke(a,t)}}k.setProperty("/apis/BluetoothScanner/",t)}function Ve(a,t){e.debug("The detectScanViaTimeInterval() is calling.");var n={key:a.key,timestamp:Date.now(),deltaTime:Number.MAX_VALUE};var r=n;if(t.resultBuffer[t.resultBuffer.length-1]!==undefined){r=t.resultBuffer[t.resultBuffer.length-1]}n.deltaTime=n.timestamp-r.timestamp;e.debug("jKey.deltaTime: "+n.deltaTime+"; key: "+n.key+"(AltKey:"+a.altKey+";CtrlKey:"+a.ctrlKey+";Which:"+a.which+"); oldLastKey:"+r.key);if(n.deltaTime>t.intervalForDetection){e.debug("jKey(key:"+n.key+").deltaTime("+n.deltaTime+") > "+t.intervalForDetection);if(n.key.length<=t.scanningKeyMaxLength){n.deltaTime=0;t.scanningLastKey=n;e.debug("addKeyToResultBuffer(): the Last key is saved.")}Je()}else{if(n.key.length<=t.scanningKeyMaxLength){t.resultBuffer.push(n);if(t.replaceGS1Separator){t=qe(a,t)}}else if(t.resultBuffer.length>0){t.resultBuffer[t.resultBuffer.length-1].timestamp=n.timestamp}if(t.timeOutForDetection){clearTimeout(t.timeOutForDetection)}e.debug("The waiting time of Bluetooth Scanner Schedule must be more than the intervalForDetection("+t.intervalForDetection+"). The default value is 50 ms and the added value is 20 ms.");t.timeOutForDetection=setTimeout(Je,t.intervalForDetection+20);if(t.handleFocusedElement&&t.resultBuffer.length<3){$e()}}}function Ke(a,t){e.debug("The detectScanViaPrefixSuffix() is calling.");var n={key:a.key,timestamp:Date.now(),deltaTime:Number.MAX_VALUE};if(n.key.length<=t.scanningKeyMaxLength){if(t.resultBuffer.length>0){if(n.timestamp-t.resultBuffer[0].timestamp>t.maxPrefixSuffixScanningTime){e.debug("detectScanViaPrefixSuffix(): The scan time to long");var r={resultBuffer:[]};b.enableBluetoothBarcodeScanner(null,r)}else if(Ye(n,t)){e.debug("detectScanViaPrefixSuffix(): The suffix("+t.suffix+") is matched.");if(t.handleFocusedElement){e.debug("Stop the event of suffix last character to trigger");a.preventDefault()}Je()}else{t.resultBuffer.push(n);if(t.replaceGS1Separator){t=qe(a,t)}}}else{je(n,t)}}}function je(e,a){var t=a.prefixString+e.key;a.prefixFound=false;if(t===a.prefix){e.key=t;if(a.prefixStartDate){e.timestamp=a.prefixStartDate}a.resultBuffer.push(e);a.prefixString="";a.prefixStartDate=null;a.prefixFound=true;if(a.handleFocusedElement){$e()}}else if(a.prefix.indexOf(t)===0){if(a.prefixString.length===0){a.prefixStartDate=e.timestamp}a.prefixString=t}else{a.prefixString="";a.prefixStartDate=null;a.resultBuffer.length=0}return a.prefixFound}function Ye(a,t){var n=t.suffixString+a.key;t.suffixFound=false;if(n===t.suffix){var r=t.resultBuffer.length-t.suffix.length+1;t.resultBuffer.splice(r);t.resultBuffer.splice(0,1);t.suffixString="";t.suffixFound=true;if(t.handleFocusedElement){e.debug("The value of focusedElementInstance:"+t.focusedElementInstance.value);$e()}}else if(n.length<t.suffix.length){t.suffixString=n}else{t.suffixString=n.substr(1)}return t.suffixFound}function qe(a,t){e.debug("The replaceGS1Codes() is calling. The GS1 will be replaced by specified characters.");if(a[t.GS1FunctionKey]){var n=t.resultBuffer;var r=t.GS1Code;if(r===undefined||r===null){if(t.GS1FunctionKey==="altKey"){r="0029"}else if(t.GS1FunctionKey==="ctrlKey"){r="]"}}if(t.replaceCharacterBuffer.length===0){t.replaceCharacterBuffer=a.key}else if(t.replaceCharacterBuffer.length>0){if(t.replaceCharacterBuffer.length<r.length){t.replaceCharacterBuffer+=a.key}else{var i=t.replaceCharacterBuffer.length-r.length+1;e.debug("The replaceCharacterBuffer: "+t.replaceCharacterBuffer+"; oStart: "+i+"; oGS1Code: "+r);t.replaceCharacterBuffer=t.replaceCharacterBuffer.slice(i)+a.key;e.debug("The replaceCharacterBuffer is changed to "+t.replaceCharacterBuffer)}}var o=false;if(t.GS1FunctionKey==="altKey"&&t.replaceCharacterBuffer.length>0&&!isNaN(t.replaceCharacterBuffer)&&!isNaN(r)){o=Number(t.replaceCharacterBuffer)===Number(r)}else{o=t.replaceCharacterBuffer===r}if(t.replaceCharacterBuffer.length>0){e.debug("replacementData - Code: "+t.GS1Code+"; Buffer:"+t.replaceCharacterBuffer+"; Function Key:"+t.GS1FunctionKey)}if(o){var s=n[n.length-1];if(t.GS1ReplacementCharacter!==undefined){s.key=t.GS1ReplacementCharacter}else{s.key=String.fromCharCode("29")}var c=t.replaceCharacterBuffer.length;n.splice(n.length-c,c,s);e.debug("replaceGS1Codes(): Replace ("+t.GS1FunctionKey+" + "+t.replaceCharacterBuffer+") by ("+s.key+")");t.replaceCharacterBuffer=""}}else{e.debug("This function key("+t.GS1FunctionKey+") of Event is false.")}return t}function Je(){var a=k.getProperty("/apis/BluetoothScanner/");e.debug("Call getScannedCharacterFromBuffer(). The length is "+a.resultBuffer.length);var t="";if(a.scanningMode==="TimeInterval"&&a.resultBuffer.length>=a.resultMinLength||a.scanningMode==="PrefixSuffix"&&a.suffixFound){a.resultBuffer.forEach(function(e){t+=e.key});var n=k.getProperty("/callBackHandler/fnBluetoothScan");if(typeof n==="function"){var r=0;if(a.resultBuffer.length>0){r=Date.now()-a.resultBuffer[0].timestamp}r=r>0?r:"unknown";var i={text:t,format:"bluetoothScanner",resultStatus:"Success",scanningTime:r,cancelled:false};i=new p("bluetoothScanSuccessEvent",new h,i);if(a.triggerOneTime){b.disableBluetoothBarcodeScanner()}n(i);k.setProperty("/scanDialog/scanningStartTime",0);e.debug("Result is: "+t)}if(a.handleFocusedElement){$e()}}else{e.debug("The length of input string is less than "+a.resultMinLength)}a.resultBuffer.length=0;a.prefixFound=false;a.suffixFound=false;if(a.focusedElementInstance){e.debug("Value of focusedElementInstance: "+a.focusedElementInstance.value)}if(a.scanningLastKey){a.resultBuffer.push(a.scanningLastKey);e.debug("Re-push the scanningLastKey("+a.scanningLastKey.key+") into the buffer.");a.scanningLastKey=null;if(a.handleFocusedElement){$e()}}else{e.debug("Clear the data of focused element");a.focusedElementValue="";a.focusedElementInstance=""}if(a.timeOutForDetection){clearTimeout(a.timeOutForDetection)}k.setProperty("/apis/BluetoothScanner/",a)}function $e(){var a=jQuery(":focus")[0];var t=k.getProperty("/apis/BluetoothScanner/");e.debug("Calling the focusedElementHandler()");if(a){if(t.scanningMode==="TimeInterval"&&t.resultBuffer.length===2||t.scanningMode==="PrefixSuffix"&&t.suffixFound){e.debug("For the focused element, the focal point will be removed and data will be reset.");t.focusedElementInstance=a;if(jQuery(a).is("input, textarea")){a.value=t.focusedElementValue;e.debug("This focused element is the input or text area element. The value is "+a.value);if(a.setSelectionRange&&t.focusedElementSelectionStart!==null&&t.focusedElementSelectionEnd!==null){e.debug("Reset the caret of the focused element");a.setSelectionRange(t.focusedElementSelectionStart,t.focusedElementSelectionEnd)}t.focusedElementValue="";t.focusedElementSelectionStart=null;t.focusedElementSelectionEnd=null}jQuery(a).blur()}else if(t.resultBuffer.length===1&&jQuery(a).is("input, textarea")){e.debug("Store the data of focused input or textarea element. ElementValue: "+a.value+"; SelectionStart: "+a.selectionStart+"; SelectionEnd: "+a.selectionEnd);t.focusedElementInstance=a;t.focusedElementValue=S.sanitize(a.value);t.focusedElementSelectionStart=a.selectionStart;t.focusedElementSelectionEnd=a.selectionEnd;if(t.scanningMode==="PrefixSuffix"){e.debug("The scanning mode is PrefixSuffix");var n=t.prefix.substr(0,t.prefix.length-1);var r=a.value.lastIndexOf(n);if(r!==-1){t.focusedElementValue=t.focusedElementValue.substr(0,r)+t.focusedElementValue.substr(r+n.length);t.focusedElementSelectionStart=t.focusedElementSelectionStart-n.length;t.focusedElementSelectionEnd=t.focusedElementSelectionEnd-n.length;e.debug("The focusedElementHandler():prefixStart:"+r+";Value"+a.value+";New Value:"+t.focusedElementValue+";PrefixSub:"+n)}}if(t.scanningLastKey){e.debug("The function focusedElementHandler() will clear the info about the LastKey: "+t.scanningLastKey.key);t.scanningLastKey=null}}}else if(typeof t.focusedElementInstance==="object"){e.debug("Re-focused this element. The value is "+t.focusedElementInstance.value);jQuery(t.focusedElementInstance).focus();t.focusedElementInstance=""}else{e.debug("There is not the focused element.")}k.setProperty("/apis/BluetoothScanner/",t)}b.scan=function(a,t,n,r,i,o,s,c){if(!k.getProperty("/bReady")){e.error("BarcodeScanner.scan: Barcode scanning is already in progress.");return}k.setProperty("/bReady",false);if(typeof a==="function"){k.setProperty("/callBackHandler/onFnSuccess",a)}else{k.setProperty("/callBackHandler/onFnSuccess",null)}if(typeof t==="function"){k.setProperty("/callBackHandler/onFnFail",t)}else{k.setProperty("/callBackHandler/onFnFail",null)}if(typeof n==="function"){k.setProperty("/scanDialog/onLiveUpdate",n)}else{k.setProperty("/scanDialog/onLiveUpdate",null)}if(typeof r==="string"&&r!=null&&r.trim()!=""){k.setProperty("/scanDialog/title",r)}else{k.setProperty("/scanDialog/title",X.getProperty("BARCODE_DIALOG_TITLE"))}k.setProperty("/scanDialog/scanningStartTime",Date.now());k.setProperty("/config/preferFrontCamera",i);if(k.getProperty("/config/defaultConstraints/video/frameRate")!==undefined){delete k.getProperty("/config/defaultConstraints/video").frameRate}if(typeof o==="number"&&o>0){k.setProperty("/config/defaultConstraints/video/frameRate",o)}else if(typeof o!=="undefined"){f.show(X.getResourceBundle().getText("BARCODE_DIALOG_CAMERA_UPDATE_PARAMETER_ERROR_MSG","frameRate"),{duration:1e3})}k.setProperty("/config/zoom",s);k.setProperty("/scanDialog/keepCameraScan",c);k.checkUpdate(true);if(We()){Ce()}else if(G("Cordova")){De()}else if(N()==="ZXing"){we()}else{Ie()}};b.closeScanDialog=function(){Ue();if(w){w.close();k.setProperty("/scanDialog/scanningStartTime",0);k.setProperty("/scanDialog/onLiveUpdate",null);k.setProperty("/scanDialog/isDecodePaused",false)}if(k.getProperty("/apis/ZXingCPP/multiScan/enabled")&&P.support.orientation){var e=P.orientation.portrait?"portrait":"landscape";k.setProperty("/scanDialog/originOrientation",e);window.removeEventListener("orientationchange",ke)}k.setProperty("/scanDialog/videoScaleX",1);k.setProperty("/scanDialog/videoScaleY",1);k.setProperty("/bReady",true);k.checkUpdate(true)};b.getStatusModel=function(){return F};b.getScanAPIInfo=function(){return N()};b.setScanAPIInfo=function(a){if(!a){e.error("BarcodeScanner.setScanAPIInfo: scannerAPI is undefined.");return false}if(N()!==a){var t=k.getProperty("/apis/"+a);if(!t){e.error("BarcodeScanner.scan: The scanner API '"+a+"' doesn't exist, will use current scanner API '"+k.getProperty("/apis/"+N()+"/description")+"' to scan the barcode.");return false}else if(a==="ZXing"||a==="ZXingCPP"){if(W(a)){e.error("BarcodeScanner.scan: The scanner API '"+a+"' is unavailable, will use current scanner API '"+k.getProperty("/apis/"+N()+"/description")+"' to scan the barcode.");return false}else{e.info("BarcodeScanner.scan: Switch to scanner API '"+a+"' to scan the barcode.");H(a);return true}}else if(!G(a)){e.error("BarcodeScanner.scan: The scanner API '"+a+"' is unavailable, will use current scanner API '"+k.getProperty("/apis/"+N()+"/description")+"' to scan the barcode.");return false}else{e.info("BarcodeScanner.scan: Switch to scanner API '"+a+"' to scan the barcode.");H(a);return true}}else{e.debug("BarcodeScanner.setScanAPIInfo: '"+a+"' is already current scanner API. It need not to be changed.");return true}};b.setPhysicalScan=function(a){if(typeof a==="function"){k.setProperty("/callBackHandler/callBackFromSetPhysicalScan",true);k.setProperty("/callBackHandler/onFnSuccess",a);k.setProperty("/callBackHandler/onFnFail",a);if(P.os.android){jQuery(document).on("visibilitychange",function(){if(document.visibilityState==="visible"){ye();Ge()}})}else{M("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.setPhysicalScan: Not Android device, Zebra Enterprise Browser plugin is unavailable!")}}else{e.debug("setPhysicalScan is failed.")}};b.setConfig=function(a){if(typeof a==="object"&&Object.keys(a).length>0){var t=k.getProperty("/config");for(var n in a){if(n==="multiScan"){if(typeof a.multiScan!=="object"){e.error("The config value for parameter 'multiScan' is not an object, please check!");continue}var r=Object.assign({},k.getProperty("/apis/ZXingCPP/multiScan"),a.multiScan);k.setProperty("/apis/ZXingCPP/multiScan",r);F.setProperty("/apis/ZXingCPP/multiScan",y(r));delete t.multiScan}else if(t.hasOwnProperty(n)){t[n]=a[n];if(We()&&n==="enableGS1Header"){k.setProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState",false);EB.Barcode.disable(Ge)}if(n==="deviceId"){F.setProperty("/"+n,a[n])}e.debug("The parameter("+n+") has been changed.")}else{e.error("The parameter("+n+") is unavailable.")}}k.setProperty("/config",t);F.checkUpdate()}else{e.error("The options are not available.")}};b.enableBluetoothBarcodeScanner=function(a,t){var n=true;if(typeof a==="function"){k.setProperty("/callBackHandler/fnBluetoothScan",a);jQuery(document).off("keydown",ze);jQuery(document).on("keydown",ze);_("BluetoothScanner",true)}else{e.debug("enableBluetoothBarcodeScanner: callback function is not available.");n=false}if(t&&typeof t==="object"&&Object.keys(t).length>0){var r=k.getProperty("/apis/BluetoothScanner");for(var i in t){if(r.hasOwnProperty(i)){e.debug("Clear the temp data about Bluetooth Scanner");r.resultBuffer.length=0;r.scanningLastKey=null;r.focusedElementValue="";r.focusedElementInstance="";r.focusedElementSelectionStart=null;r.focusedElementSelectionEnd=null;r.replaceCharacterBuffer="";r.suffixString="";r.prefixString="";r.prefixStartDate=null;r.prefixFound=false;r.suffixFound=false;if(r.timeOutForDetection){clearTimeout(r.timeOutForDetection)}if(i==="intervalForDetection"||i==="maxPrefixSuffixScanningTime"||i==="resultMinLength"||i==="scanningKeyMaxLength"){if(typeof t[i]==="number"){setTimeout(Je,0);e.debug("The parameter ("+i+") will be updated.")}else{e.error("The value of "+i+" is not a valid number.");n=false}}r[i]=t[i];e.debug("The parameter("+i+") has been changed.")}else{e.error("The parameter("+i+") is not exist.");n=false}}k.setProperty("/apis/BluetoothScanner/",r)}else{e.debug("enableBluetoothBarcodeScanner: The settings are not available.");n=false}if(self!=top&&k.getProperty("/apis/BluetoothScanner/focusedCurrentWindow")){window.focus();e.debug("Current window is focused for bluetooth scanner.")}return n};b.disableBluetoothBarcodeScanner=function(){jQuery(document).off("keydown",ze);M("BluetoothScanner",true)};ve();return b},true);
//# sourceMappingURL=BarcodeScanner.js.map